{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.8.10",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@here/harp-text-canvas!",
  "docComment": "/**\n * SDF based text rendering for TypeScript.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n",
  "name": "@here/harp-text-canvas",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@here/harp-text-canvas!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!AdditionParameters:interface",
          "docComment": "/**\n * Optional parameters passed on [[TextCanvas]].`addText` function call.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AdditionParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "AdditionParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!AdditionParameters#layer:member",
              "docComment": "/**\n * Layer where text will be added.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layer?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!AdditionParameters#letterCaseArray:member",
              "docComment": "/**\n * Array containing info on whether the glyphs are upper or lower case. Needed to support `SmallCaps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "letterCaseArray?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "letterCaseArray",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!AdditionParameters#path:member",
              "docComment": "/**\n * Path where text should be placed on. Overrides the original position parameter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Path",
                  "canonicalReference": "three!Path:class"
                },
                {
                  "kind": "Content",
                  "text": " | THREE."
                },
                {
                  "kind": "Reference",
                  "text": "CurvePath",
                  "canonicalReference": "three!CurvePath:class"
                },
                {
                  "kind": "Content",
                  "text": "<THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!AdditionParameters#pathOverflow:member",
              "docComment": "/**\n * If `true`, text on a path will be placed even when its size its bigger than the path's size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pathOverflow?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pathOverflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!AdditionParameters#pickingData:member",
              "docComment": "/**\n * Object containing additional data intended to be retrieved during picking.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pickingData?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pickingData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!AdditionParameters#updatePosition:member",
              "docComment": "/**\n * If `true`, the input position parameter will be updated to contain the position of the last glyph added.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatePosition?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "updatePosition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-text-canvas!ContextualArabicConverter:class",
          "docComment": "/**\n * Converter between arabic isolated forms (in Unicode Block 'Arabic') and their contextual forms (in Unicode Block 'Arabic Presentation Forms-B').\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ContextualArabicConverter "
            }
          ],
          "releaseTag": "Public",
          "name": "ContextualArabicConverter",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!ContextualArabicConverter#convert:member(1)",
              "docComment": "/**\n * Converts isolated arabic characters into their contextual form.\n *\n * @param input - String with isolated arabic characters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "convert(input: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "convert"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!ContextualArabicConverter.instance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get instance(): "
                },
                {
                  "kind": "Reference",
                  "text": "ContextualArabicConverter",
                  "canonicalReference": "@here/harp-text-canvas!ContextualArabicConverter:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "instance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-text-canvas!createSdfTextMaterial:function(1)",
          "docComment": "/**\n * Helper function designed to create [[SdfTextMaterials]] that can be rendered using [[TextCanvas]].\n *\n * @param params - Material parameters.\n *\n * @returns New `SdfTextMaterial`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createSdfTextMaterial(params: "
            },
            {
              "kind": "Reference",
              "text": "SdfTextMaterialParameters",
              "canonicalReference": "@here/harp-text-canvas!SdfTextMaterialParameters:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "SdfTextMaterial",
              "canonicalReference": "@here/harp-text-canvas!SdfTextMaterial:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "createSdfTextMaterial"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-text-canvas!DEFAULT_TEXT_CANVAS_LAYER:var",
          "docComment": "/**\n * Default's [[TextCanvas]] layer identifier.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFAULT_TEXT_CANVAS_LAYER = 0"
            }
          ],
          "releaseTag": "Public",
          "name": "DEFAULT_TEXT_CANVAS_LAYER",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle:namespace",
          "docComment": "/**\n * Namespace containing default values for all members of [[TextRenderParameters]] and [[TextLayoutParameters]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace DefaultTextStyle "
            }
          ],
          "releaseTag": "Public",
          "name": "DefaultTextStyle",
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_BACKGROUND_COLOR:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_BACKGROUND_COLOR: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_BACKGROUND_COLOR",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_BACKGROUND_OPACITY:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_BACKGROUND_OPACITY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_BACKGROUND_OPACITY",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_CANVAS_ROTATION:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_CANVAS_ROTATION: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_CANVAS_ROTATION",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_COLOR:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_COLOR: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_COLOR",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_FONT_NAME:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_FONT_NAME: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_FONT_NAME",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_FONT_SIZE:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_FONT_SIZE: "
                },
                {
                  "kind": "Reference",
                  "text": "FontSize",
                  "canonicalReference": "@here/harp-text-canvas!FontSize:interface"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_FONT_SIZE",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_FONT_STYLE:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_FONT_STYLE: "
                },
                {
                  "kind": "Reference",
                  "text": "FontStyle",
                  "canonicalReference": "@here/harp-text-canvas!FontStyle:enum"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_FONT_STYLE",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_FONT_VARIANT:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_FONT_VARIANT: "
                },
                {
                  "kind": "Reference",
                  "text": "FontVariant",
                  "canonicalReference": "@here/harp-text-canvas!FontVariant:enum"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_FONT_VARIANT",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_HORIZONTAL_ALIGNMENT:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_HORIZONTAL_ALIGNMENT: "
                },
                {
                  "kind": "Reference",
                  "text": "HorizontalAlignment",
                  "canonicalReference": "@here/harp-text-canvas!HorizontalAlignment:enum"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_HORIZONTAL_ALIGNMENT",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_LEADING:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_LEADING: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_LEADING",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_LINE_ROTATION:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_LINE_ROTATION: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_LINE_ROTATION",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_LINE_WIDTH:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_LINE_WIDTH: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_LINE_WIDTH",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_MAX_LINES:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_MAX_LINES: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_MAX_LINES",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_OPACITY:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_OPACITY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_OPACITY",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_PLACEMENTS:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_PLACEMENTS: "
                },
                {
                  "kind": "Reference",
                  "text": "TextPlacement",
                  "canonicalReference": "@here/harp-text-canvas!TextPlacement:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_PLACEMENTS",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_ROTATION:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_ROTATION: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_ROTATION",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_TRACKING:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_TRACKING: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_TRACKING",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_VERTICAL_ALIGNMENT:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_VERTICAL_ALIGNMENT: "
                },
                {
                  "kind": "Reference",
                  "text": "VerticalAlignment",
                  "canonicalReference": "@here/harp-text-canvas!VerticalAlignment:enum"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_VERTICAL_ALIGNMENT",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!DefaultTextStyle.DEFAULT_WRAPPING_MODE:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_WRAPPING_MODE: "
                },
                {
                  "kind": "Reference",
                  "text": "WrappingMode",
                  "canonicalReference": "@here/harp-text-canvas!WrappingMode:enum"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_WRAPPING_MODE",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!Font:interface",
          "docComment": "/**\n * Description of all assets, charset and metrics that define a font inside a [[FontCatalog]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Font "
            }
          ],
          "releaseTag": "Public",
          "name": "Font",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!Font#bold:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bold?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bold",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!Font#boldItalic:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "boldItalic?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "boldItalic",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!Font#charset:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "charset: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "charset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!Font#italic:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "italic?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "italic",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!Font#metrics:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metrics: "
                },
                {
                  "kind": "Reference",
                  "text": "FontMetrics",
                  "canonicalReference": "@here/harp-text-canvas!FontMetrics:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "metrics",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!Font#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-text-canvas!FontCatalog:class",
          "docComment": "/**\n * Collection of font assets used to render glyphs when using a [[TextCanvas]].\n *\n * @summary A `FontCatalog` works as a stack of SDF bitmap fonts (using the BMFont format) designed to cover the widest Unicode code point range possible. In order to manage all these assets elegantly, the assets inside the `FontCatalog` are stored on a per-Unicode-Block basis, and assets for a block are only loaded once a glyph belonging to that block is requested.\n *\n * Bitmap information coming from all different fonts is then stored in a unified WebGL GPU Texture resource, which can be sampled to render all currently loaded glyphs.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FontCatalog "
            }
          ],
          "releaseTag": "Public",
          "name": "FontCatalog",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#clear:member(1)",
              "docComment": "/**\n * Removes all loaded (and loading) assets.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#dispose:member(1)",
              "docComment": "/**\n * Release all allocated resources.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#distanceRange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly distanceRange: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "distanceRange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#fonts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly fonts: "
                },
                {
                  "kind": "Reference",
                  "text": "Font",
                  "canonicalReference": "@here/harp-text-canvas!Font:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fonts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#getFont:member(1)",
              "docComment": "/**\n * Gets the best matched font for a specific character.\n *\n * @param codePoint - Character's Unicode code point.\n *\n * @param fontName - Font name suggestion.\n *\n * @returns Best matched font.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFont(codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", fontName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Font",
                  "canonicalReference": "@here/harp-text-canvas!Font:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codePoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "fontName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getFont"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#getGlyph:member(1)",
              "docComment": "/**\n * Retrieves the loaded [[GlyphData]] for a specific character. Returns `undefined` if the assets for this glyph haven't been loaded yet.\n *\n * @param codePoint - Character's Unicode code point.\n *\n * @param font - [[Font]] to get this glyph from.\n *\n * @param fontStyle - Specific [[FontStyle]] to get glyphs for.\n *\n * @returns [[GlyphData]] for this code point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGlyph(codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", font: "
                },
                {
                  "kind": "Reference",
                  "text": "Font",
                  "canonicalReference": "@here/harp-text-canvas!Font:interface"
                },
                {
                  "kind": "Content",
                  "text": ", fontStyle: "
                },
                {
                  "kind": "Reference",
                  "text": "FontStyle",
                  "canonicalReference": "@here/harp-text-canvas!FontStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codePoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "font",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "fontStyle",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "getGlyph"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#getGlyphs:member(1)",
              "docComment": "/**\n * Retrieves the loaded [[GlyphData]] for the specified text. Returns `undefined` if the assets for these glyphs haven't been loaded yet.\n *\n * @param input - Input text.\n *\n * @param style - Specific [[TextRenderStyle]] to get glyphs for.\n *\n * @param letterCaseArray - Array containing the original letter case for the requested glyphs.\n *\n * @returns Array containing [[GlyphData]] for each character of the input text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGlyphs(input: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", style: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ", letterCaseArray?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "letterCaseArray",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "getGlyphs"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#isLoading:member",
              "docComment": "/**\n * Current internal loading state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isLoading(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog.load:member(1)",
              "docComment": "/**\n * Loads a `FontCatalog`.\n *\n * @param url - Asset url.\n *\n * @param maxCodePointCount - Maximum number of unique code points bitmaps this `FontCatalog`'s internal texture can store simultaneously.\n *\n * @returns `FontCatalog` Promise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static load(path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", maxCodePointCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FontCatalog",
                  "canonicalReference": "@here/harp-text-canvas!FontCatalog:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "maxCodePointCount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "load"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#loadBlock:member(1)",
              "docComment": "/**\n * Loads the description file for a specific [[UnicodeBlock]]. This speeds up consequent calls to `FontCatalog`.loadCharset() that require glyphs from this block to be loaded.\n *\n * @param block - Requested [[UnicodeBlock]].\n *\n * @param font - [[Font]] to retrieve this Unicode block from.\n *\n * @param fontStyle - [[FontStyle]] assets to load.\n *\n * @param loadPages - If `true`, all pages in this Unicode block will also be loaded.\n *\n * @returns Loaded Unicode Block json.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBlock(block: "
                },
                {
                  "kind": "Reference",
                  "text": "UnicodeBlock",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeBlock:interface"
                },
                {
                  "kind": "Content",
                  "text": ", font: "
                },
                {
                  "kind": "Reference",
                  "text": "Font",
                  "canonicalReference": "@here/harp-text-canvas!Font:interface"
                },
                {
                  "kind": "Content",
                  "text": ", fontStyle: "
                },
                {
                  "kind": "Reference",
                  "text": "FontStyle",
                  "canonicalReference": "@here/harp-text-canvas!FontStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": ", loadPages?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "block",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "font",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "fontStyle",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "loadPages",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "loadBlock"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#loadCharset:member(1)",
              "docComment": "/**\n * Loads all the required glyphs needed to render the input text. Character repetition will not be considered, and only styled assets (with applied font selection, style and variants) will be loaded.\n *\n * @param input - Input text.\n *\n * @param style - Specific [[TextRenderStyle]] for which glyphs will be loaded.\n *\n * @returns Promise containing an array of all loaded [[GlyphData]] for the input text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadCharset(input: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", style: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "loadCharset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog.loadJSON:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static loadJSON(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "loadJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog.loadTexture:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static loadTexture(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "loadTexture"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#maxCodePointCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly maxCodePointCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxCodePointCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#maxHeight:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly maxHeight: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#maxWidth:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly maxWidth: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#removeBlock:member(1)",
              "docComment": "/**\n * Releases the description file for a specific [[UnicodeBlock]] (and all downloaded pages). Safe to call when no assets for this block have been loaded.\n *\n * @param block - Requested [[UnicodeBlock]].\n *\n * @param font - [[Font]] to remove this Unicode block from.\n *\n * @param fontStyle - [[FontStyle]] assets to remove.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeBlock(block: "
                },
                {
                  "kind": "Reference",
                  "text": "UnicodeBlock",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeBlock:interface"
                },
                {
                  "kind": "Content",
                  "text": ", font: "
                },
                {
                  "kind": "Reference",
                  "text": "Font",
                  "canonicalReference": "@here/harp-text-canvas!Font:interface"
                },
                {
                  "kind": "Content",
                  "text": ", fontStyle: "
                },
                {
                  "kind": "Reference",
                  "text": "FontStyle",
                  "canonicalReference": "@here/harp-text-canvas!FontStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "block",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "font",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "fontStyle",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "removeBlock"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#size:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#texture:member",
              "docComment": "/**\n * Internal WebGL Texture.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get texture(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "texture",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#textureSize:member",
              "docComment": "/**\n * Internal WebGL Texture size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get textureSize(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "textureSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#unicodeBlocks:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly unicodeBlocks: "
                },
                {
                  "kind": "Reference",
                  "text": "UnicodeBlock",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeBlock:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "unicodeBlocks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#update:member(1)",
              "docComment": "/**\n * Updates the internal WebGLRenderTarget. The update will copy the newly introduced glyphs since the previous update.\n *\n * @param renderer - WebGLRenderer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(renderer: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "WebGLRenderer",
                  "canonicalReference": "three!WebGLRenderer:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "renderer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "update"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#updateMemoryUsage:member(1)",
              "docComment": "/**\n * Update the info with the memory footprint caused by objects owned by the `FontCatalog`.\n *\n * @param info - The info object to increment with the values from this `FontCatalog`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateMemoryUsage(info: "
                },
                {
                  "kind": "Reference",
                  "text": "MemoryUsage",
                  "canonicalReference": "@here/harp-text-canvas!MemoryUsage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "updateMemoryUsage"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!FontCatalog#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!FontMetrics:interface",
          "docComment": "/**\n * Metrics defining the placement and rendering of all glyphs in a given [[Font]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FontMetrics "
            }
          ],
          "releaseTag": "Public",
          "name": "FontMetrics",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontMetrics#base:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "base: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "base",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontMetrics#capHeight:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capHeight: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "capHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontMetrics#distanceRange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distanceRange: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "distanceRange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontMetrics#lineGap:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lineGap: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lineGap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontMetrics#lineHeight:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lineHeight: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lineHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontMetrics#size:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontMetrics#xHeight:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xHeight: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!FontSize:interface",
          "docComment": "/**\n * Pair of unit and size specifying a font's size.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FontSize "
            }
          ],
          "releaseTag": "Public",
          "name": "FontSize",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontSize#backgroundSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontSize#size:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!FontSize#unit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unit: "
                },
                {
                  "kind": "Reference",
                  "text": "FontUnit",
                  "canonicalReference": "@here/harp-text-canvas!FontUnit:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "unit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-text-canvas!FontStyle:enum",
          "docComment": "/**\n * Style to be used when rendering glyphs.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum FontStyle "
            }
          ],
          "releaseTag": "Public",
          "name": "FontStyle",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontStyle.Bold:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Bold = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Bold",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontStyle.BoldItalic:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BoldItalic = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "BoldItalic",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontStyle.Italic:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Italic = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Italic",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontStyle.Regular:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Regular = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Regular",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-text-canvas!FontUnit:enum",
          "docComment": "/**\n * Unit of measurement used to specify a font's size.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum FontUnit "
            }
          ],
          "releaseTag": "Public",
          "name": "FontUnit",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontUnit.Em:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Em = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Em",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontUnit.Percent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Percent = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "Percent",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontUnit.Pixel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Pixel = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Pixel",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontUnit.Point:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Point = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Point",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-text-canvas!FontVariant:enum",
          "docComment": "/**\n * Variant to be used when rendering.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum FontVariant "
            }
          ],
          "releaseTag": "Public",
          "name": "FontVariant",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontVariant.AllCaps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AllCaps = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "AllCaps",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontVariant.Regular:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Regular = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Regular",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!FontVariant.SmallCaps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SmallCaps = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "SmallCaps",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-text-canvas!GlyphData:class",
          "docComment": "/**\n * Structure containing all the required information necessary to render a BMFont glyph using [[TextCanvas]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GlyphData "
            }
          ],
          "releaseTag": "Public",
          "name": "GlyphData",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-text-canvas!GlyphData:constructor(1)",
              "docComment": "/**\n * Creates a new `GlyphData` object.\n *\n * @param codePoint - Unicode code point.\n *\n * @param block - Unicode block.\n *\n * @param width - Glyph' width.\n *\n * @param height - Glyph' height.\n *\n * @param advanceX - Amount of pixel to move after placing this glyph.\n *\n * @param offsetX - Horizontal offset from the glyph' origin.\n *\n * @param offsetY - Vertical offset from the glyph' origin.\n *\n * @param u0 - Glyph' left texture coordinate.\n *\n * @param v0 - Glyph' bottom texture coordinate.\n *\n * @param u1 - Glyph' right texture coordinate.\n *\n * @param v1 - Glyph' top texture coordinate.\n *\n * @param texture - Glyph' source texture atlas page.\n *\n * @param font - Glyph' font.\n *\n * @returns New `GlyphData`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", block: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", width: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", height: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", advanceX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", offsetX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", offsetY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", u0: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", v0: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", u1: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", v1: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", texture: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": ", font: "
                },
                {
                  "kind": "Reference",
                  "text": "Font",
                  "canonicalReference": "@here/harp-text-canvas!Font:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codePoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "block",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "width",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "height",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "advanceX",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "offsetX",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                },
                {
                  "parameterName": "offsetY",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  }
                },
                {
                  "parameterName": "u0",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  }
                },
                {
                  "parameterName": "v0",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  }
                },
                {
                  "parameterName": "u1",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  }
                },
                {
                  "parameterName": "v1",
                  "parameterTypeTokenRange": {
                    "startIndex": 21,
                    "endIndex": 22
                  }
                },
                {
                  "parameterName": "texture",
                  "parameterTypeTokenRange": {
                    "startIndex": 23,
                    "endIndex": 25
                  }
                },
                {
                  "parameterName": "font",
                  "parameterTypeTokenRange": {
                    "startIndex": 26,
                    "endIndex": 27
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#advanceX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly advanceX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "advanceX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#block:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly block: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "block",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#character:member",
              "docComment": "/**\n * Unicode character represented by this glyph.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly character: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "character",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#clone:member(1)",
              "docComment": "/**\n * Clone this `GlyphData`.\n *\n * @returns Cloned `GlyphData`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clone"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#codePoint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "codePoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#copyIndex:member",
              "docComment": "/**\n * Source texture atlas' page copy index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copyIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "copyIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#direction:member",
              "docComment": "/**\n * Glyph' direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly direction: "
                },
                {
                  "kind": "Reference",
                  "text": "UnicodeUtils.Direction",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.Direction:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "direction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#dynamicTextureCoordinates:member",
              "docComment": "/**\n * Array containing the dynamic texture coordinates for all corners of this glyph. Used to sample the dynamic texture atlas page.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynamicTextureCoordinates: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dynamicTextureCoordinates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#font:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly font: "
                },
                {
                  "kind": "Reference",
                  "text": "Font",
                  "canonicalReference": "@here/harp-text-canvas!Font:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "font",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#height:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly height: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#isInCache:member",
              "docComment": "/**\n * Flag indicating if glyph can be currently rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInCache: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isInCache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#offsetX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly offsetX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "offsetX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#offsetY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly offsetY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "offsetY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#positions:member",
              "docComment": "/**\n * Array containing the positions for all corners of this glyph.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "positions: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "three!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "positions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#sourceTextureCoordinates:member",
              "docComment": "/**\n * Array containing the source texture coordinates for all corners of this glyph. Used to sample the original texture atlas pages.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sourceTextureCoordinates: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sourceTextureCoordinates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#texture:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly texture: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "texture",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!GlyphData#width:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly width: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-text-canvas!HorizontalAlignment:enum",
          "docComment": "/**\n * Horizontal alignment to be used when placing text.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum HorizontalAlignment "
            }
          ],
          "releaseTag": "Public",
          "name": "HorizontalAlignment",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!HorizontalAlignment.Center:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Center = "
                },
                {
                  "kind": "Content",
                  "text": "-0.5"
                }
              ],
              "releaseTag": "Public",
              "name": "Center",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!HorizontalAlignment.Left:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Left = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Left",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!HorizontalAlignment.Right:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Right = "
                },
                {
                  "kind": "Content",
                  "text": "-1"
                }
              ],
              "releaseTag": "Public",
              "name": "Right",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-text-canvas!HorizontalPlacement:enum",
          "docComment": "/**\n * Horizontal position of text element relative to the placement context (point, line).\n *\n * @note [[HorizontalPlacement]] value is exactly opposite to [[HorizontalAlignment]] value, cause when you place text on the right side of point (or icon) it will be left-aligned.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum HorizontalPlacement "
            }
          ],
          "releaseTag": "Public",
          "name": "HorizontalPlacement",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!HorizontalPlacement.Center:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Center = "
                },
                {
                  "kind": "Content",
                  "text": "-0.5"
                }
              ],
              "releaseTag": "Public",
              "name": "Center",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!HorizontalPlacement.Left:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Left = "
                },
                {
                  "kind": "Content",
                  "text": "-1"
                }
              ],
              "releaseTag": "Public",
              "name": "Left",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!HorizontalPlacement.Right:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Right = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Right",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!MeasurementParameters:interface",
          "docComment": "/**\n * Optional parameters passed on [[TextCanvas]].`measureText` function call.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MeasurementParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "MeasurementParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!MeasurementParameters#letterCaseArray:member",
              "docComment": "/**\n * Array containing info on whether the glyphs are upper or lower case. Needed to support `SmallCaps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "letterCaseArray?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "letterCaseArray",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!MeasurementParameters#outputCharacterBounds:member",
              "docComment": "/**\n * Output per-character bounds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputCharacterBounds?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Box2",
                  "canonicalReference": "three!Box2:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "outputCharacterBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!MeasurementParameters#path:member",
              "docComment": "/**\n * Path where text should be placed on. Overrides the original position parameter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Path",
                  "canonicalReference": "three!Path:class"
                },
                {
                  "kind": "Content",
                  "text": " | THREE."
                },
                {
                  "kind": "Reference",
                  "text": "CurvePath",
                  "canonicalReference": "three!CurvePath:class"
                },
                {
                  "kind": "Content",
                  "text": "<THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!MeasurementParameters#pathOverflow:member",
              "docComment": "/**\n * If `true`, text on a path will be placed even when its size its bigger than the path's size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pathOverflow?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pathOverflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!MemoryUsage:interface",
          "docComment": "/**\n * Describes estimated usage of memory on heap and GPU.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MemoryUsage "
            }
          ],
          "releaseTag": "Public",
          "name": "MemoryUsage",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!MemoryUsage#gpuSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gpuSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gpuSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!MemoryUsage#heapSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "heapSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "heapSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!SdfTextMaterialParameters:interface",
          "docComment": "/**\n * Material parameters passed on [[SdfTextMaterial]] creation when using the ` `createSdfTextMaterial` helper function.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SdfTextMaterialParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "SdfTextMaterialParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!SdfTextMaterialParameters#fontCatalog:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fontCatalog: "
                },
                {
                  "kind": "Reference",
                  "text": "FontCatalog",
                  "canonicalReference": "@here/harp-text-canvas!FontCatalog:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fontCatalog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!SdfTextMaterialParameters#fragmentSource:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fragmentSource?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fragmentSource",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!SdfTextMaterialParameters#isBackground:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isBackground?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!SdfTextMaterialParameters#vertexSource:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vertexSource?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "vertexSource",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters:interface",
          "docComment": "/**\n * Optional parameters passed on [[TextCanvas]].`addTextBufferObject` function call.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TextBufferAdditionParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "TextBufferAdditionParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#backgroundColor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundColor?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#backgroundOpacity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundOpacity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundOpacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#layer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layer?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#opacity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "opacity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "opacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#pickingData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pickingData?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pickingData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#position:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "position?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "three!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "position",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#rotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotation?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters#scale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scale?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "scale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!TextBufferCreationParameters:interface",
          "docComment": "/**\n * Optional parameters passed on [[TextCanvas]].`createTextBufferObject` function call.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TextBufferCreationParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "TextBufferCreationParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferCreationParameters#letterCaseArray:member",
              "docComment": "/**\n * Array containing info on whether the glyphs are upper or lower case. Needed to support `SmallCaps`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "letterCaseArray?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "letterCaseArray",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferCreationParameters#outputBounds:member",
              "docComment": "/**\n * Output text bounding-box.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputBounds?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "outputBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferCreationParameters#outputCharacterBounds:member",
              "docComment": "/**\n * Output per-character bounds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputCharacterBounds?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "outputCharacterBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferCreationParameters#path:member",
              "docComment": "/**\n * Path where text should be placed on. Overrides the original position parameter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Path",
                  "canonicalReference": "three!Path:class"
                },
                {
                  "kind": "Content",
                  "text": " | THREE."
                },
                {
                  "kind": "Reference",
                  "text": "CurvePath",
                  "canonicalReference": "three!CurvePath:class"
                },
                {
                  "kind": "Content",
                  "text": "<THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferCreationParameters#pathOverflow:member",
              "docComment": "/**\n * If `true`, text on a path will be placed even when its size its bigger than the path's size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pathOverflow?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pathOverflow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextBufferCreationParameters#storeStyles:member",
              "docComment": "/**\n * If `true`, both the [[TextRenderStyle]] and [[TextLayoutStyle]] used to generate the [[TextBufferObject]] will be stored in it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storeStyles?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "storeStyles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-text-canvas!TextBufferObject:class",
          "docComment": "/**\n * Object containing vertex buffer data generated by [[TextCanvas]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TextBufferObject "
            }
          ],
          "releaseTag": "Public",
          "name": "TextBufferObject",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-text-canvas!TextBufferObject:constructor(1)",
              "docComment": "/**\n * Constructs a new `TextBufferObject`.\n *\n * @param glyphs - Input glyphs.\n *\n * @param buffer - Buffer containing the data generated by [[TextCanvas]].\n *\n * @param bounds - Optional text bounds.\n *\n * @param characterBounds - Optional character bounds.\n *\n * @param textRenderStyle - [[TextRenderStyle]] applied by [[TextCanvas]].\n *\n * @param textLayoutStyle - [[TextLayoutStyle]] applied by [[TextCanvas]].\n *\n * @returns New `TextBufferObject`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(glyphs: "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ", bounds?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Box2",
                  "canonicalReference": "three!Box2:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", characterBounds?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Box2",
                  "canonicalReference": "three!Box2:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", textRenderStyle?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", textLayoutStyle?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "glyphs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "bounds",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "characterBounds",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 13
                  }
                },
                {
                  "parameterName": "textRenderStyle",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 16
                  }
                },
                {
                  "parameterName": "textLayoutStyle",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 19
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextBufferObject#bounds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly bounds?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Box2",
                  "canonicalReference": "three!Box2:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextBufferObject#buffer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buffer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextBufferObject#characterBounds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly characterBounds?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Box2",
                  "canonicalReference": "three!Box2:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "characterBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextBufferObject#glyphs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly glyphs: "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "glyphs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextBufferObject#textLayoutStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly textLayoutStyle?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "textLayoutStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextBufferObject#textRenderStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly textRenderStyle?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "textRenderStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-text-canvas!TextCanvas:class",
          "docComment": "/**\n * three.js text rendering engine which can manage and render high-quality, transformable, stylable and properly layout SDF and MSDF text.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TextCanvas "
            }
          ],
          "releaseTag": "Public",
          "name": "TextCanvas",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas:constructor(1)",
              "docComment": "/**\n * Constructs a new `TextCanvas`.\n *\n * @param params - `TextCanvas` construction parameters.\n *\n * @returns New `TextCanvas`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TextCanvasParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextCanvasParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#addLayer:member(1)",
              "docComment": "/**\n * Creates a new `TextCanvas` rendering layer and returns. If there was already a layer for the input `layerId`, it just returns this one instead.\n *\n * @param layerId - Desired layer identifier.\n *\n * @returns Created [[TextCanvasLayer]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addLayer(layerId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TextCanvasLayer",
                  "canonicalReference": "@here/harp-text-canvas!TextCanvasLayer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layerId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addLayer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#addText:member(1)",
              "docComment": "/**\n * Adds the input text to this `TextCanvas` in the specified screen position. The current [[TextRenderStyle]] and [[TextLayoutStyle]] will influence the results of this function.\n *\n * @param text - Input text. Provide an array of [[GlyphData]] for better performance.\n *\n * @param position - Screen position.\n *\n * @param params - Optional addition parameters.\n *\n * @returns Result of the addition. If `false`, some error occurred during execution and the input text couldn't be properly added.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addText(text: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", position: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "three!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Reference",
                  "text": "AdditionParameters",
                  "canonicalReference": "@here/harp-text-canvas!AdditionParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "text",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "position",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "addText"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#addTextBufferObject:member(1)",
              "docComment": "/**\n * Adds a previously created [[TextBufferObject]] to the `TextCanvas`. Additional parameters can be provided to override the attributes stored in the buffer.\n *\n * @param textBufferObject - [[TextBufferObject]] to add.\n *\n * @param params - Optional addition parameters.\n *\n * @returns Result of the addition. If `false`, some error occurred during execution and the input text couldn't be properly added.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addTextBufferObject(textBufferObject: "
                },
                {
                  "kind": "Reference",
                  "text": "TextBufferObject",
                  "canonicalReference": "@here/harp-text-canvas!TextBufferObject:class"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextBufferAdditionParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextBufferAdditionParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "textBufferObject",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "addTextBufferObject"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#backgroundMaterial:member",
              "docComment": "/**\n * Currently active text background rendering material.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get backgroundMaterial(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "three!Material:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset backgroundMaterial(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "three!Material:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundMaterial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#clear:member(1)",
              "docComment": "/**\n * Clears all the placed glyphs in this `TextCanvas` (as well as resetting the current style).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#createTextBufferObject:member(1)",
              "docComment": "/**\n * Creates a new [[TextBufferObject]]. The computed text vertex buffer is equivalent to the result of performing the `addText` function for the input text in the screen origin.\n *\n * @param text - Input text. Provide an array of [[GlyphData]] for better performance.\n *\n * @param params - Optional creation parameters.\n *\n * @returns New [[TextBufferObject]] (or `undefined` if requested text glyphs couldn't be retrieved from the current [[FontCatalog]]).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createTextBufferObject(text: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextBufferCreationParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextBufferCreationParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TextBufferObject",
                  "canonicalReference": "@here/harp-text-canvas!TextBufferObject:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "text",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "createTextBufferObject"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#fontCatalog:member",
              "docComment": "/**\n * Currently active [[FontCatalog]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fontCatalog(): "
                },
                {
                  "kind": "Reference",
                  "text": "FontCatalog",
                  "canonicalReference": "@here/harp-text-canvas!FontCatalog:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fontCatalog(value: "
                },
                {
                  "kind": "Reference",
                  "text": "FontCatalog",
                  "canonicalReference": "@here/harp-text-canvas!FontCatalog:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "fontCatalog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#getAllLayers:member(1)",
              "docComment": "/**\n * Retrieves all `TextCanvas` rendering layers.\n *\n * @returns Array of [[TextCanvasLayer]]s.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllLayers(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextCanvasLayer",
                  "canonicalReference": "@here/harp-text-canvas!TextCanvasLayer:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getAllLayers"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#getLayer:member(1)",
              "docComment": "/**\n * Retrieves a specific `TextCanvas` rendering layer.\n *\n * @param layerId - Desired layer identifier.\n *\n * @returns Selected [[TextCanvasLayer]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLayer(layerId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TextCanvasLayer",
                  "canonicalReference": "@here/harp-text-canvas!TextCanvasLayer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layerId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getLayer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#getMemoryUsage:member(1)",
              "docComment": "/**\n * Update the info with the memory footprint caused by objects owned by the `TextCanvas`.\n *\n * @param info - The info object to increment with the values from this `TextCanvas`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMemoryUsage(info: "
                },
                {
                  "kind": "Reference",
                  "text": "MemoryUsage",
                  "canonicalReference": "@here/harp-text-canvas!MemoryUsage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getMemoryUsage"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#material:member",
              "docComment": "/**\n * Currently active text rendering material.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get material(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "three!Material:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset material(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "three!Material:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "material",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#maxGlyphCount:member",
              "docComment": "/**\n * Maximum amount of glyphs each [[TextCanvas]] layer can store.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly maxGlyphCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxGlyphCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#measureText:member(1)",
              "docComment": "/**\n * Returns the computed bounding box for the input text. The current [[TextRenderStyle]] and [[TextLayoutStyle]] will influence the results of this function.\n *\n * @param text - Input text. Provide an array of [[GlyphData]] for better performance.\n *\n * @param outputBounds - Output text bounding box.\n *\n * @param params - Optional measurement parameters.\n *\n * @returns Result of the measurement. If `false`, some error occurred during execution and the input text couldn't be properly measured.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "measureText(text: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", outputBounds: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Box2",
                  "canonicalReference": "three!Box2:class"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Reference",
                  "text": "MeasurementParameters",
                  "canonicalReference": "@here/harp-text-canvas!MeasurementParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "text",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "outputBounds",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "measureText"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#minGlyphCount:member",
              "docComment": "/**\n * Minimum amount of glyphs each [[TextCanvas]] layer can store.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly minGlyphCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minGlyphCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#pickText:member(1)",
              "docComment": "/**\n * Executes the `pickCallback` for all previously stored picking data for text covering the specified screen position.\n *\n * @param screenPosition - Screen coordinate of picking position.\n *\n * @param pickCallback - Callback to be called for every picked element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pickText(position: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "(pickData: any | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "position",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "pickText"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#render:member(1)",
              "docComment": "/**\n * Renders the content of this `TextCanvas`.\n *\n * @param camera - Orthographic camera.\n *\n * @param target - Optional render target.\n *\n * @param clear - Optional render target clear operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(camera: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "OrthographicCamera",
                  "canonicalReference": "three!OrthographicCamera:class"
                },
                {
                  "kind": "Content",
                  "text": ", target?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "WebGLRenderTarget",
                  "canonicalReference": "three!WebGLRenderTarget:class"
                },
                {
                  "kind": "Content",
                  "text": ", clear?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "camera",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "clear",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "render"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#textLayoutStyle:member",
              "docComment": "/**\n * Currently active text layout style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get textLayoutStyle(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset textLayoutStyle(style: "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "textLayoutStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextCanvas#textRenderStyle:member",
              "docComment": "/**\n * Currently active text rendering style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get textRenderStyle(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset textRenderStyle(style: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "textRenderStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!TextCanvasLayer:interface",
          "docComment": "/**\n * [[TextCanvas]] rendering layer.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TextCanvasLayer "
            }
          ],
          "releaseTag": "Public",
          "name": "TextCanvasLayer",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextCanvasLayer#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextCanvasLayer#storage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storage: "
                },
                {
                  "kind": "Reference",
                  "text": "TextGeometry",
                  "canonicalReference": "@here/harp-text-canvas!TextGeometry:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "storage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!TextCanvasParameters:interface",
          "docComment": "/**\n * [[TextCanvas]] construction parameters.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TextCanvasParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "TextCanvasParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextCanvasParameters#backgroundMaterial:member",
              "docComment": "/**\n * Material used to render text background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundMaterial?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "three!Material:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundMaterial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextCanvasParameters#fontCatalog:member",
              "docComment": "/**\n * Initial [[FontCatalog]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fontCatalog: "
                },
                {
                  "kind": "Reference",
                  "text": "FontCatalog",
                  "canonicalReference": "@here/harp-text-canvas!FontCatalog:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fontCatalog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextCanvasParameters#material:member",
              "docComment": "/**\n * Material used to render text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "material?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "three!Material:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "material",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextCanvasParameters#maxGlyphCount:member",
              "docComment": "/**\n * Maximum amount of glyphs each [[TextCanvas]] layer can store.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxGlyphCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxGlyphCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextCanvasParameters#minGlyphCount:member",
              "docComment": "/**\n * Minimum amount of glyphs each [[TextCanvas]] layer can store.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minGlyphCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minGlyphCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextCanvasParameters#renderer:member",
              "docComment": "/**\n * WebGLRenderer internally used by this `TextCanvas`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderer: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "WebGLRenderer",
                  "canonicalReference": "three!WebGLRenderer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "renderer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters:interface",
          "docComment": "/**\n * [[TextCanvas]] text layout parameters.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TextLayoutParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "TextLayoutParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#canvasRotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canvasRotation?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canvasRotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#horizontalAlignment:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "horizontalAlignment?: "
                },
                {
                  "kind": "Reference",
                  "text": "HorizontalAlignment",
                  "canonicalReference": "@here/harp-text-canvas!HorizontalAlignment:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "horizontalAlignment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#leading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "leading?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "leading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#lineRotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lineRotation?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lineRotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#lineWidth:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lineWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lineWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#maxLines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxLines?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxLines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#placements:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "placements?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextPlacements",
                  "canonicalReference": "@here/harp-text-canvas!TextPlacements:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "placements",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#tracking:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tracking?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tracking",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#verticalAlignment:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verticalAlignment?: "
                },
                {
                  "kind": "Reference",
                  "text": "VerticalAlignment",
                  "canonicalReference": "@here/harp-text-canvas!VerticalAlignment:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "verticalAlignment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters#wrappingMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wrappingMode?: "
                },
                {
                  "kind": "Reference",
                  "text": "WrappingMode",
                  "canonicalReference": "@here/harp-text-canvas!WrappingMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "wrappingMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:class",
          "docComment": "/**\n * [[TextCanvas]] text rendering style.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TextLayoutStyle "
            }
          ],
          "releaseTag": "Public",
          "name": "TextLayoutStyle",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:constructor(1)",
              "docComment": "/**\n * Creates a new `TextLayoutStyle`.\n *\n * @param params - Input [[TextLayoutParameters]].\n *\n * @returns New `TextLayoutStyle`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#canvasRotation:member",
              "docComment": "/**\n * [[TextCanvas]] rotation (radians).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get canvasRotation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset canvasRotation(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "canvasRotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#clone:member(1)",
              "docComment": "/**\n * Clone this [[TextLayoutStyle]].\n *\n * @param params - Input [[TextLayoutParameters]].\n *\n * @returns Cloned [[TextLayoutStyle]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#copy:member(1)",
              "docComment": "/**\n * Copy other [[TextLayoutStyle]] properties into this object instance.\n *\n * @param other - The object to be copied.\n *\n * @returns reference to `this` object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#horizontalAlignment:member",
              "docComment": "/**\n * Text position inside a line.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get horizontalAlignment(): "
                },
                {
                  "kind": "Reference",
                  "text": "HorizontalAlignment",
                  "canonicalReference": "@here/harp-text-canvas!HorizontalAlignment:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset horizontalAlignment(value: "
                },
                {
                  "kind": "Reference",
                  "text": "HorizontalAlignment",
                  "canonicalReference": "@here/harp-text-canvas!HorizontalAlignment:enum"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "horizontalAlignment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#leading:member",
              "docComment": "/**\n * Inter-line spacing (pixels). Scaled by [[FontSize]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get leading(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset leading(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "leading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#lineRotation:member",
              "docComment": "/**\n * Line typesetting rotation (radians).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get lineRotation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset lineRotation(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "lineRotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#lineWidth:member",
              "docComment": "/**\n * Maximum line width (pixels).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get lineWidth(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset lineWidth(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "lineWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#maxLines:member",
              "docComment": "/**\n * Maximum number of lines to be considered when using [[TextCanvas]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get maxLines(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset maxLines(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "maxLines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#params:member",
              "docComment": "/**\n * Current [[TextLayoutParameters]] for this style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get params(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset params(value: "
                },
                {
                  "kind": "Reference",
                  "text": "TextLayoutParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextLayoutParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#placements:member",
              "docComment": "/**\n * Text placement options relative to label anchor (origin).\n *\n * @note [[TextPlacement]]s options may override alignment settings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get placements(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextPlacements",
                  "canonicalReference": "@here/harp-text-canvas!TextPlacements:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset placements(value: "
                },
                {
                  "kind": "Reference",
                  "text": "TextPlacements",
                  "canonicalReference": "@here/harp-text-canvas!TextPlacements:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "placements",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#tracking:member",
              "docComment": "/**\n * Inter-glyph spacing (pixels). Scaled by [[FontSize]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get tracking(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset tracking(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "tracking",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#verticalAlignment:member",
              "docComment": "/**\n * Text position regarding the baseline.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get verticalAlignment(): "
                },
                {
                  "kind": "Reference",
                  "text": "VerticalAlignment",
                  "canonicalReference": "@here/harp-text-canvas!VerticalAlignment:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset verticalAlignment(value: "
                },
                {
                  "kind": "Reference",
                  "text": "VerticalAlignment",
                  "canonicalReference": "@here/harp-text-canvas!VerticalAlignment:enum"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "verticalAlignment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextLayoutStyle#wrappingMode:member",
              "docComment": "/**\n * Wrapping (line-breaking) mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get wrappingMode(): "
                },
                {
                  "kind": "Reference",
                  "text": "WrappingMode",
                  "canonicalReference": "@here/harp-text-canvas!WrappingMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset wrappingMode(value: "
                },
                {
                  "kind": "Reference",
                  "text": "WrappingMode",
                  "canonicalReference": "@here/harp-text-canvas!WrappingMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "wrappingMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!TextPlacement:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TextPlacement "
            }
          ],
          "releaseTag": "Public",
          "name": "TextPlacement",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextPlacement#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Reference",
                  "text": "HorizontalPlacement",
                  "canonicalReference": "@here/harp-text-canvas!HorizontalPlacement:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextPlacement#v:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v: "
                },
                {
                  "kind": "Reference",
                  "text": "VerticalPlacement",
                  "canonicalReference": "@here/harp-text-canvas!VerticalPlacement:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "v",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@here/harp-text-canvas!TextPlacements:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TextPlacements = "
            },
            {
              "kind": "Reference",
              "text": "TextPlacement",
              "canonicalReference": "@here/harp-text-canvas!TextPlacement:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TextPlacements",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!TextRenderParameters:interface",
          "docComment": "/**\n * [[TextCanvas]] text rendering parameters.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TextRenderParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "TextRenderParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#backgroundColor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundColor?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#backgroundOpacity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundOpacity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundOpacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#fontName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fontName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fontName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#fontSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fontSize?: "
                },
                {
                  "kind": "Reference",
                  "text": "FontSize",
                  "canonicalReference": "@here/harp-text-canvas!FontSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fontSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#fontStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fontStyle?: "
                },
                {
                  "kind": "Reference",
                  "text": "FontStyle",
                  "canonicalReference": "@here/harp-text-canvas!FontStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fontStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#fontVariant:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fontVariant?: "
                },
                {
                  "kind": "Reference",
                  "text": "FontVariant",
                  "canonicalReference": "@here/harp-text-canvas!FontVariant:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fontVariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#opacity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "opacity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "opacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!TextRenderParameters#rotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotation?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class",
          "docComment": "/**\n * [[TextCanvas]] text rendering style.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TextRenderStyle "
            }
          ],
          "releaseTag": "Public",
          "name": "TextRenderStyle",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:constructor(1)",
              "docComment": "/**\n * Creates a new `TextRenderStyle`.\n *\n * @param params - Input [[TextRenderParameters]].\n *\n * @returns New `TextRenderStyle`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#backgroundColor:member",
              "docComment": "/**\n * Glyph background color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get backgroundColor(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset backgroundColor(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#backgroundOpacity:member",
              "docComment": "/**\n * Glyph background opacity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get backgroundOpacity(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset backgroundOpacity(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundOpacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#clone:member(1)",
              "docComment": "/**\n * Clone this [[TextRenderStyle]].\n *\n * @param params - Input [[TextRenderParameters]].\n *\n * @returns Cloned [[TextRenderStyle]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "clone"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#color:member",
              "docComment": "/**\n * Glyph color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get color(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset color(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#copy:member(1)",
              "docComment": "/**\n * Copy other [[TextRenderStyle]] properties into this object instance.\n *\n * @param source - The source object to be copied.\n *\n * @returns reference to `this` object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copy(source: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderStyle",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderStyle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#fontName:member",
              "docComment": "/**\n * Name of the preferred [[Font]] to be used when rendering.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fontName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fontName(value: string);"
                }
              ],
              "releaseTag": "Public",
              "name": "fontName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#fontSize:member",
              "docComment": "/**\n * Collection of unit and sizes to apply for the currently active [[Font]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fontSize(): "
                },
                {
                  "kind": "Reference",
                  "text": "FontSize",
                  "canonicalReference": "@here/harp-text-canvas!FontSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fontSize(value: "
                },
                {
                  "kind": "Reference",
                  "text": "FontSize",
                  "canonicalReference": "@here/harp-text-canvas!FontSize:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "fontSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#fontStyle:member",
              "docComment": "/**\n * Glyph style to apply for the currently active [[Font]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fontStyle(): "
                },
                {
                  "kind": "Reference",
                  "text": "FontStyle",
                  "canonicalReference": "@here/harp-text-canvas!FontStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fontStyle(value: "
                },
                {
                  "kind": "Reference",
                  "text": "FontStyle",
                  "canonicalReference": "@here/harp-text-canvas!FontStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "fontStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#fontVariant:member",
              "docComment": "/**\n * Glyph variant to apply for the currently active [[Font]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fontVariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "FontVariant",
                  "canonicalReference": "@here/harp-text-canvas!FontVariant:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fontVariant(value: "
                },
                {
                  "kind": "Reference",
                  "text": "FontVariant",
                  "canonicalReference": "@here/harp-text-canvas!FontVariant:enum"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "fontVariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#opacity:member",
              "docComment": "/**\n * Glyph opacity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get opacity(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset opacity(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "opacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#params:member",
              "docComment": "/**\n * Current [[TextRenderParameters]] for this style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get params(): "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset params(value: "
                },
                {
                  "kind": "Reference",
                  "text": "TextRenderParameters",
                  "canonicalReference": "@here/harp-text-canvas!TextRenderParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-text-canvas!TextRenderStyle#rotation:member",
              "docComment": "/**\n * Glyph local rotation (radians).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get rotation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset rotation(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "rotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@here/harp-text-canvas!TypesettingUtils:namespace",
          "docComment": "/**\n * Collection of different constants and utility functions used by [[Typesetter]]s.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace TypesettingUtils "
            }
          ],
          "releaseTag": "Public",
          "name": "TypesettingUtils",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.computeGlyphTransform:function(1)",
              "docComment": "/**\n * Computes the transformation matrix for a glyph.\n *\n * @param transform - Matrix used to store the results.\n *\n * @param position - Glyph' position.\n *\n * @param scale - Glyph' scale.\n *\n * @param rotation - [[TextCanvas]] rotation.\n *\n * @param localRotation - Glyph' local rotation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function computeGlyphTransform(transform: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3",
                  "canonicalReference": "three!Matrix3:class"
                },
                {
                  "kind": "Content",
                  "text": ", position: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "three!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", scale: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", rotation: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", localRotation: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "transform",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "position",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "scale",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "rotation",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "localRotation",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ],
              "name": "computeGlyphTransform"
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.EM_TO_PX:var",
              "docComment": "/**\n * Ratio between EMs and Pixels.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EM_TO_PX = 16"
                }
              ],
              "releaseTag": "Public",
              "name": "EM_TO_PX",
              "variableTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.getDirection:function(1)",
              "docComment": "/**\n * Returns the first strong direction (LTR or RTL) found for a given array of [[GlyphData]].\n *\n * @param glyphs - Array containing [[GlyphData]].\n *\n * @param offset - `glyphDataArray` offset.\n *\n * @returns Strong direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function getDirection(glyphs: "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UnicodeUtils.Direction",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.Direction:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "glyphs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "getDirection"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.getPixelSize:function(1)",
              "docComment": "/**\n * Convert between any size specified in any [[FontUnit]] to pixels.\n *\n * @param size - Font size (specified in `unit`).\n *\n * @param unit - Size unit.\n *\n * @param originalSize - Original size (pixels)\n *\n * @returns Pixel size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function getPixelSize(size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", unit: "
                },
                {
                  "kind": "Reference",
                  "text": "FontUnit",
                  "canonicalReference": "@here/harp-text-canvas!FontUnit:enum"
                },
                {
                  "kind": "Content",
                  "text": ", originalSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "size",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "unit",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "originalSize",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "getPixelSize"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.getSmallCapsScale:function(1)",
              "docComment": "/**\n * Gets the scale applied to a certain character when using the [[FontVariant]].`SmallCaps`.\n *\n * @param glyphs - Array containing [[TransformedGlyphData]].\n *\n * @param index - Index to `glyphDataArray`.\n *\n * @param fontVariant - Currently active [[FontVariant]].\n *\n * @returns Glyph `SmallCaps` scale.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function getSmallCapsScale(glyphs: "
                },
                {
                  "kind": "Reference",
                  "text": "GlyphData",
                  "canonicalReference": "@here/harp-text-canvas!GlyphData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", smallCapsTransformations: "
                },
                {
                  "kind": "Content",
                  "text": "boolean[]"
                },
                {
                  "kind": "Content",
                  "text": ", index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", fontVariant: "
                },
                {
                  "kind": "Reference",
                  "text": "FontVariant",
                  "canonicalReference": "@here/harp-text-canvas!FontVariant:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "glyphs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "smallCapsTransformations",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "fontVariant",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "getSmallCapsScale"
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.OBLIQUE_ANGLE:var",
              "docComment": "/**\n * Angle used when emulating italic fonts (oblique).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OBLIQUE_ANGLE = 0.174533"
                }
              ],
              "releaseTag": "Public",
              "name": "OBLIQUE_ANGLE",
              "variableTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.OBLIQUE_OFFSET:var",
              "docComment": "/**\n * Horizontal offset used when emulating italic fonts (oblique).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OBLIQUE_OFFSET: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "OBLIQUE_OFFSET",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.PT_TO_PX:var",
              "docComment": "/**\n * Ratio between Points and Pixels.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PT_TO_PX = 1.25"
                }
              ],
              "releaseTag": "Public",
              "name": "PT_TO_PX",
              "variableTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!TypesettingUtils.updateBounds:function(1)",
              "docComment": "/**\n * Updates the supplied bounds with the computed screen-space corners for a given glyph.\n *\n * @param corners - Glyph' corners.\n *\n * @param globalBounds - Global text bounds.\n *\n * @param individualBounds - Individual per-character bounds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function updateBounds(corners: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "three!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", globalBounds: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Box2",
                  "canonicalReference": "three!Box2:class"
                },
                {
                  "kind": "Content",
                  "text": ", individualBounds?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        array: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Box2",
                  "canonicalReference": "three!Box2:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        offset: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "corners",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "globalBounds",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "individualBounds",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  }
                }
              ],
              "name": "updateBounds"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-text-canvas!UnicodeBlock:interface",
          "docComment": "/**\n * Description of a continuous range of Unicode code points (as well as information on which fonts supports it).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UnicodeBlock "
            }
          ],
          "releaseTag": "Public",
          "name": "UnicodeBlock",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!UnicodeBlock#fonts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fonts: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fonts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!UnicodeBlock#max:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!UnicodeBlock#min:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "min",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-text-canvas!UnicodeBlock#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@here/harp-text-canvas!UnicodeUtils:namespace",
          "docComment": "/**\n * Namespace containing useful information when dealing with Unicode's code points.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace UnicodeUtils "
            }
          ],
          "releaseTag": "Public",
          "name": "UnicodeUtils",
          "members": [
            {
              "kind": "Enum",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.Direction:enum",
              "docComment": "/**\n * Unicode code point direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum Direction "
                }
              ],
              "releaseTag": "Public",
              "name": "Direction",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.Direction.LTR:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "LTR = "
                    },
                    {
                      "kind": "Content",
                      "text": "1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "LTR",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.Direction.Neutral:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "Neutral = "
                    },
                    {
                      "kind": "Content",
                      "text": "0"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Neutral",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.Direction.RTL:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "RTL = "
                    },
                    {
                      "kind": "Content",
                      "text": "-1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "RTL",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.Direction.Weak:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "Weak = "
                    },
                    {
                      "kind": "Content",
                      "text": "0.5"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Weak",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.getDirection:function(1)",
              "docComment": "/**\n * Returns the Unicode's character direction.\n *\n * @param codePoint - Character's Unicode code point.\n *\n * @param block - Character's Unicode block.\n *\n * @returns Character's direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function getDirection(codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", block: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Direction",
                  "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.Direction:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codePoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "block",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getDirection"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.isNewLine:function(1)",
              "docComment": "/**\n * Checks if a character should be considered as a new line.\n *\n * @param codePoint - Character's Unicode code point.\n *\n * @returns Result of the test.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function isNewLine(codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codePoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isNewLine"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.isPrintable:function(1)",
              "docComment": "/**\n * Checks if a character's can be printed (rendered).\n *\n * @param codePoint - Character's Unicode code point.\n *\n * @returns Result of the test.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function isPrintable(codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codePoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isPrintable"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.isRtlMirrored:function(1)",
              "docComment": "/**\n * Checks if a character should be mirrored on an RTL run.\n *\n * @param codePoint - Character's Unicode code point.\n *\n * @returns Result of the test.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function isRtlMirrored(codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codePoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isRtlMirrored"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.isWhiteSpace:function(1)",
              "docComment": "/**\n * Checks if a character should be considered as a white space.\n *\n * @param codePoint - Character's Unicode code point.\n *\n * @returns Result of the test.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function isWhiteSpace(codePoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "codePoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isWhiteSpace"
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.neutralBidirectionalRanges:var",
              "docComment": "/**\n * ASCII punctuation is considered to have neutral direction: https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)#Table_of_characters\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralBidirectionalRanges: "
                },
                {
                  "kind": "Content",
                  "text": "number[][]"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralBidirectionalRanges",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.newLineRanges:var",
              "docComment": "/**\n * Range of Unicode code points considered as `NewLine`. https://en.wikipedia.org/wiki/Newline#Unicode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newLineRanges: "
                },
                {
                  "kind": "Content",
                  "text": "number[][]"
                }
              ],
              "releaseTag": "Public",
              "name": "newLineRanges",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.nonPrintableRanges:var",
              "docComment": "/**\n * Range of Unicode code points considered as non-printable. https://en.wikipedia.org/wiki/Unicode_control_characters\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nonPrintableRanges: "
                },
                {
                  "kind": "Content",
                  "text": "number[][]"
                }
              ],
              "releaseTag": "Public",
              "name": "nonPrintableRanges",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.rtlBlocks:var",
              "docComment": "/**\n * Unicode Blocks which have inherent RTL direction. These blocks correspond to the scripts described here: https://en.wikipedia.org/wiki/Right-to-left#List_of_RTL_scripts\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rtlBlocks: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                }
              ],
              "releaseTag": "Public",
              "name": "rtlBlocks",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.rtlMirroredCodePoints:var",
              "docComment": "/**\n * Some punctuation characters (like: (, ), <, >, [,], {, }) need to be mirrored when rendering a RTL string to preserve their intrinsic meaning. https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)#Table_of_characters\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rtlMirroredCodePoints: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                }
              ],
              "releaseTag": "Public",
              "name": "rtlMirroredCodePoints",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.weakBidirectionalRanges:var",
              "docComment": "/**\n * Latin and arabic numerals are considered to have weak directionality: https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)#Table_of_characters https://en.wikipedia.org/wiki/Arabic_(Unicode_block)#Block\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "weakBidirectionalRanges: "
                },
                {
                  "kind": "Content",
                  "text": "number[][]"
                }
              ],
              "releaseTag": "Public",
              "name": "weakBidirectionalRanges",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-text-canvas!UnicodeUtils.whiteSpaceRanges:var",
              "docComment": "/**\n * Range of Unicode code points considered as white space. https://en.wikipedia.org/wiki/Whitespace_character\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "whiteSpaceRanges: "
                },
                {
                  "kind": "Content",
                  "text": "number[][]"
                }
              ],
              "releaseTag": "Public",
              "name": "whiteSpaceRanges",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-text-canvas!VerticalAlignment:enum",
          "docComment": "/**\n * Vertical alignment to be used when placing text.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum VerticalAlignment "
            }
          ],
          "releaseTag": "Public",
          "name": "VerticalAlignment",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!VerticalAlignment.Above:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Above = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Above",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!VerticalAlignment.Below:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Below = "
                },
                {
                  "kind": "Content",
                  "text": "-1"
                }
              ],
              "releaseTag": "Public",
              "name": "Below",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!VerticalAlignment.Center:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Center = "
                },
                {
                  "kind": "Content",
                  "text": "-0.5"
                }
              ],
              "releaseTag": "Public",
              "name": "Center",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-text-canvas!VerticalPlacement:enum",
          "docComment": "/**\n * Vertical position of text area relative to the placement context (point, line).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum VerticalPlacement "
            }
          ],
          "releaseTag": "Public",
          "name": "VerticalPlacement",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!VerticalPlacement.Bottom:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Bottom = "
                },
                {
                  "kind": "Content",
                  "text": "-1"
                }
              ],
              "releaseTag": "Public",
              "name": "Bottom",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!VerticalPlacement.Center:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Center = "
                },
                {
                  "kind": "Content",
                  "text": "-0.5"
                }
              ],
              "releaseTag": "Public",
              "name": "Center",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!VerticalPlacement.Top:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Top = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Top",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-text-canvas!WrappingMode:enum",
          "docComment": "/**\n * Text wrapping rule used when `lineWidth` is reached.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum WrappingMode "
            }
          ],
          "releaseTag": "Public",
          "name": "WrappingMode",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!WrappingMode.Character:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Character = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Character",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!WrappingMode.None:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "None = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "None",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-text-canvas!WrappingMode.Word:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Word = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Word",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        }
      ]
    }
  ]
}
