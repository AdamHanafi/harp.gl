{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.8.10",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@here/harp-olp-utils!",
  "docComment": "/**\n * HERE OLP utilities.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n",
  "name": "@here/harp-olp-utils",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@here/harp-olp-utils!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProvider:class",
          "docComment": "/**\n * Copyright provider which retrieves copyright coverage information from OLP partition.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OlpCopyrightProvider extends "
            },
            {
              "kind": "Reference",
              "text": "CopyrightCoverageProvider",
              "canonicalReference": "@here/harp-mapview!CopyrightCoverageProvider:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OlpCopyrightProvider",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProvider:constructor(1)",
              "docComment": "/**\n * Default constructor.\n *\n * @param m_params - Copyright provider configuration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(m_params: "
                },
                {
                  "kind": "Reference",
                  "text": "OlpCopyrightProviderParams",
                  "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m_params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProvider#getCopyrightCoverageData:member(1)",
              "docComment": "/**\n * @inheritdoc\n *\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCopyrightCoverageData(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AreaCopyrightInfo",
                  "canonicalReference": "@here/harp-mapview!AreaCopyrightInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getCopyrightCoverageData"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams:interface",
          "docComment": "/**\n * [[OlpCopyrightProvider]] initialization parameters.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OlpCopyrightProviderParams "
            }
          ],
          "releaseTag": "Public",
          "name": "OlpCopyrightProviderParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams#baseScheme:member",
              "docComment": "/**\n * Scheme to retrieve copyrights from.  @default `\"normal\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseScheme?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "baseScheme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams#environment:member",
              "docComment": "/**\n * The name of environment. If omitted, environment from catalog HRN will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "environment?: "
                },
                {
                  "kind": "Reference",
                  "text": "EnvironmentName",
                  "canonicalReference": "@here/olp-sdk-dataservice-read!EnvironmentName:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "environment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams#getToken:member",
              "docComment": "/**\n * Token resolution callback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams#hrn:member",
              "docComment": "/**\n * OLP catalog HRN.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hrn: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hrn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams#layer:member",
              "docComment": "/**\n * Layer name.  @default `\"copyright\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layer?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams#partition:member",
              "docComment": "/**\n * Partition name with copyright coverage data.  @default `\"copyright_suppliers_here\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partition?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "partition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpCopyrightProviderParams#version:member",
              "docComment": "/**\n * Version of the catalog\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-olp-utils!OlpDataProvider:class",
          "docComment": "/**\n * [[DataProvider]] implementation for OLP catalogs.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OlpDataProvider implements "
            },
            {
              "kind": "Reference",
              "text": "DataProvider",
              "canonicalReference": "@here/harp-mapview-decoder!DataProvider:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OlpDataProvider",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProvider:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OlpDataProvider` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params: "
                },
                {
                  "kind": "Reference",
                  "text": "OlpDataProviderParams",
                  "canonicalReference": "@here/harp-olp-utils!OlpDataProviderParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProvider#connect:member(1)",
              "docComment": "/**\n * Connect to the data source. Returns a promise to wait for successful (or failed) connection.\n *\n * @returns A promise which is resolved when the connection has been established.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProvider#getTile:member(1)",
              "docComment": "/**\n * Load the data of a [[Tile]] asynchronously in form of an [[ArrayBufferLike]].\n *\n * @param tileKey - Address of a tile.\n *\n * @param abortSignal - Optional AbortSignal to cancel the request.\n *\n * @returns A promise delivering the data as an [[ArrayBufferLike]], or any object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTile(tileKey: "
                },
                {
                  "kind": "Reference",
                  "text": "TileKey",
                  "canonicalReference": "@here/harp-geoutils!TileKey:class"
                },
                {
                  "kind": "Content",
                  "text": ", abortSignal?: "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignal",
                  "canonicalReference": "!AbortSignal:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBufferLike",
                  "canonicalReference": "!ArrayBufferLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tileKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "abortSignal",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTile"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProvider#params:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly params: "
                },
                {
                  "kind": "Reference",
                  "text": "OlpDataProviderParams",
                  "canonicalReference": "@here/harp-olp-utils!OlpDataProviderParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProvider#ready:member(1)",
              "docComment": "/**\n * Returns `true` if it has been connected successfully.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ready(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "ready"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-olp-utils!OlpDataProviderParams:interface",
          "docComment": "/**\n * [[OlpDataProvider]] initialization parameters.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OlpDataProviderParams "
            }
          ],
          "releaseTag": "Public",
          "name": "OlpDataProviderParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProviderParams#getToken:member",
              "docComment": "/**\n * Token resolution callback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProviderParams#hrn:member",
              "docComment": "/**\n * OLP catalog HRN.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hrn: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hrn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProviderParams#layerId:member",
              "docComment": "/**\n * OLP catalog layer id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layerId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layerId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-olp-utils!OlpDataProviderParams#version:member",
              "docComment": "/**\n * OLP catalog version.  @default Latest catalog version\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
