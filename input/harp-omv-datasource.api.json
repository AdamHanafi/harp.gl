{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.8.10",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@here/harp-omv-datasource!",
  "docComment": "/**\n * HERE OMV Data source.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n",
  "name": "@here/harp-omv-datasource",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@here/harp-omv-datasource!",
      "name": "",
      "members": [
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-omv-datasource!APIFormat:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum APIFormat "
            }
          ],
          "releaseTag": "Public",
          "name": "APIFormat",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!APIFormat.HereV1:member",
              "docComment": "/**\n * Use the REST API format of HERE Vector Tiles Server component version 1.\n *\n * Documentation: https://developer.here.com/documentation/vector-tiles-api/dev_guide/index.html\n *\n * Usage:\n *\n * <OmvRestClientParams.baseUrl>/<zoom>/<X>/<Y>/omv\n *\n * If [[OmvRestClientParams.authenticationToken]] is provided, it will be added as HTTP header:\n *\n * Authorization: Bearer $authenticationToken\n *\n * Format definition: `//http|s://<base-url>/{API version}/{layers}/{projection}/{z}/{x}/{y}/{format}`\n *\n * Default authentication method used: [[AuthenticationTypeBearer]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HereV1 = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "HereV1",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!APIFormat.MapboxV4:member",
              "docComment": "/**\n * Use the REST API format of Mapbox Vector Tile API v4.\n *\n * Usage: `<OmvRestClientParams.baseUrl>/<zoom>/<X>/<Y>.mvt?access_token=<OmvRestClientParams.authenticationCode>`\n *\n * Format definition: `http|s://<base-url>/v4/{map_id}/{z}/{x}/{y}{@2x}.{format}?[style]&access_token={access_token}`\n *\n * Sample URL: `http://a.tiles.mapbox.com/v4/mapbox.mapbox-streets-v7/14/4823/6160.mvt?access_token=your-mapbox-access-token`\n *\n * Default authentication method used: [[AuthenticationTypeAccessToken]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MapboxV4 = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "MapboxV4",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!APIFormat.TomtomV1:member",
              "docComment": "/**\n * Use the REST API format of Tomtoms Vector Tile API v1.\n *\n * Usage: `<OmvRestClientParams.baseUrl>/<zoom>/<X>/<Y>.pbf?key=<OmvRestClientParams.authenticationCode>`\n *\n * Format definition: `<http|https>://<baseURL>/map/<versionNumber>/tile/<layer>/<style>/<zoom>/<X>/<Y>.<format>?key=<apiKey>[&view=<view>][&language=<language>]`\n *\n * Sample URL: `http://api.tomtom.com/map/1/tile/basic/main/0/0/0.pbf?key=<apiKey>`\n *\n * Default authentication method used: [[AuthenticationTypeTomTomV1]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TomtomV1 = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "releaseTag": "Public",
              "name": "TomtomV1",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!APIFormat.XYZJson:member",
              "docComment": "/**\n * Use the REST API format of XYZ Vector Tile API in JSON format.\n *\n * Usage: `<OmvRestClientParams.baseUrl>/tiles/omsbase/256/<zoom>/<X>/<Y>.mvt?access_token=<OmvRestClientParams.authenticationCode>`\n *\n * Format definition: `http|s://<base-url>/tiles/{layers}/{z}/{x}/{y}/{format}?access_token={access_token}`\n *\n * Sample URL: `https://xyz.api.here.com/tiles/osmbase/256/all/16/19293/24641.json?access_token=your-xyz-api-key`\n *\n * Default authentication method used: [[AuthenticationTypeAccessToken]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "XYZJson = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "XYZJson",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!APIFormat.XYZMVT:member",
              "docComment": "/**\n * Use the REST API format of XYZ Vector Tile API in MVT format.\n *\n * Usage: `<OmvRestClientParams.baseUrl>/tiles/omsbase/256/<zoom>/<X>/<Y>.mvt?access_token=<OmvRestClientParams.authenticationCode>`\n *\n * Format definition: `http|s://<base-url>/tiles/{layers}/{z}/{x}/{y}/{format}?access_token={access_token}`\n *\n * Sample URL: `https://xyz.api.here.com/tiles/osmbase/256/all/16/19293/24641.mvt?access_token=your-xyz-access-token`\n *\n * Default authentication method used: [[AuthenticationTypeAccessToken]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "XYZMVT = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "XYZMVT",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!APIFormat.XYZOMV:member",
              "docComment": "/**\n * Use the REST API format of XYZ Vector Tile API in OMV format.\n *\n * Usage: `<OmvRestClientParams.baseUrl>/tiles/herebase.02/<zoom>/<X>/<Y>/omv?access_token=<OmvRestClientParams.authenticationCode>`\n *\n * Format definition: `http|s://<base-url>/tiles/herebase.02/{z}/{x}/{y}/{format}?access_token={access_token}`\n *\n * Sample URL: `https://xyz.api.here.com/tiles/herebase.02/14/2649/6338/omv?access_token=your-xyz-access-token`\n *\n * Default authentication method used: [[AuthenticationTypeAccessToken]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "XYZOMV = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "releaseTag": "Public",
              "name": "XYZOMV",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!APIFormat.XYZSpace:member",
              "docComment": "/**\n * Use the REST API format of XYZ Space Vector Tile API in OMV format.\n *\n * Usage: `<OmvRestClientParams.baseUrl>/hub/spaces/<space-id>/tile/web/<zoom>_<X>_<Y>.mvt?access_token=<OmvRestClientParams.authenticationCode>`\n *\n * Format definition: `http|s://<base-url>/hub/spaces/{spaceId}/tile/web/{z}_{x}_{y}.mvt?access_token={access_token}`\n *\n * Sample URL: `https://xyz.api.here.com/hub/spaces/your-space-id/tile/web/{z}_{x}_{y}.mvt?access_token=your-access-token`\n *\n * Default authentication method used: [[AuthenticationTypeAccessToken]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "XYZSpace = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "releaseTag": "Public",
              "name": "XYZSpace",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@here/harp-omv-datasource!AuthenticationCodeProvider:type",
          "docComment": "/**\n * Authentication token/code provider used by [[OmvRestClient]] before each call to currently valid authentication code/token.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AuthenticationCodeProvider = "
            },
            {
              "kind": "Content",
              "text": "() => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationCodeProvider",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethod:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum AuthenticationMethod "
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationMethod",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethod.AuthorizationHeader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AuthorizationHeader = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "AuthorizationHeader",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethod.QueryString:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "QueryString = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "QueryString",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethodInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AuthenticationMethodInfo "
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationMethodInfo",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethodInfo#method:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "method: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationMethod",
                  "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethod:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethodInfo#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-omv-datasource!AuthenticationTypeAccessToken:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "AuthenticationTypeAccessToken: "
            },
            {
              "kind": "Reference",
              "text": "AuthenticationMethodInfo",
              "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethodInfo:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationTypeAccessToken",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-omv-datasource!AuthenticationTypeBearer:var",
          "docComment": "/**\n * Authentication method, where token will be provided as HTTP Header:\n *\n * Authorization: Bearer $authenticationToken\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "AuthenticationTypeBearer: "
            },
            {
              "kind": "Reference",
              "text": "AuthenticationMethodInfo",
              "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethodInfo:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationTypeBearer",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-omv-datasource!AuthenticationTypeTomTomV1:var",
          "docComment": "/**\n * TomTomV1 API compatible authorization method, where token will be provided as HTTP Header:\n *\n * Authorization: Bearer $authenticationToken\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "AuthenticationTypeTomTomV1: "
            },
            {
              "kind": "Reference",
              "text": "AuthenticationMethodInfo",
              "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethodInfo:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "AuthenticationTypeTomTomV1",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter:class",
          "docComment": "/**\n * An [[OmvFeatureFilter]] implementation that delegates all filter decision returning `true` for any predicate if all delegates return `true`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ComposedDataFilter implements "
            },
            {
              "kind": "Reference",
              "text": "OmvFeatureFilter",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ComposedDataFilter",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ComposedDataFilter` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(filters: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilter",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filters",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter#filters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly filters: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilter",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "filters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter#hasKindFilter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasKindFilter(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hasKindFilter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter#wantsKind:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsKind(kind: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "kind",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "wantsKind"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter#wantsLayer:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsLayer(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "wantsLayer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter#wantsLineFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsLineFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsLineFeature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter#wantsPointFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsPointFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsPointFeature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!ComposedDataFilter#wantsPolygonFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsPolygonFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsPolygonFeature"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-omv-datasource!FeatureModifierId:enum",
          "docComment": "/**\n * Feature Modifier ids to choose which OmvFeatureModifer should be used in OmvDecoder.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum FeatureModifierId "
            }
          ],
          "releaseTag": "Public",
          "name": "FeatureModifierId",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!FeatureModifierId.default:member",
              "docComment": "/**\n * Generic feature modifier used when no other modifiers are defined.\n *\n * @note You do not need to specify it in [[OmvDataSourceParameters]] as it is added by default if no other feature modifier is used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "default = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "default",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!FeatureModifierId.tomTom:member",
              "docComment": "/**\n * Identifier to use the OmvTomTomFeatureModifier in the OmvDecoder.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tomTom = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "tomTom",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProvider:class",
          "docComment": "/**\n * GeoJson [[DataProvider]]. Automatically handles tiling and simplification of static GeoJson.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GeoJsonDataProvider implements "
            },
            {
              "kind": "Reference",
              "text": "DataProvider",
              "canonicalReference": "@here/harp-mapview-decoder!DataProvider:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GeoJsonDataProvider",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProvider:constructor(1)",
              "docComment": "/**\n * Constructs a new `GeoJsonDataProvider`.\n *\n * @param name - Name to be used to reference this `DataProvider`\n *\n * @param input - URL of the GeoJSON, or a GeoJSON.\n *\n * @param options - Optional\n *\n * @returns New `GeoJsonDataProvider`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", input: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "GeoJson",
                  "canonicalReference": "@here/harp-datasource-protocol!GeoJson:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GeoJsonDataProviderOptions",
                  "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProviderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProvider#connect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProvider#getTile:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTile(tileKey: "
                },
                {
                  "kind": "Reference",
                  "text": "TileKey",
                  "canonicalReference": "@here/harp-geoutils!TileKey:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tileKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTile"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProvider#input:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "input: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "GeoJson",
                  "canonicalReference": "@here/harp-datasource-protocol!GeoJson:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "input",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProvider#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProvider#ready:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ready(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "ready"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProvider#updateInput:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateInput(input: "
                },
                {
                  "kind": "Reference",
                  "text": "URL",
                  "canonicalReference": "!URL:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "GeoJson",
                  "canonicalReference": "@here/harp-datasource-protocol!GeoJson:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "updateInput"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProviderOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GeoJsonDataProviderOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "GeoJsonDataProviderOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProviderOptions#tiler:member",
              "docComment": "/**\n * Custom tiler instance. If not provided, [[GeoJsonDataProvider]] will obtain [[WorkerBasedTiler]] from [[ConcurrentTilerFacade]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tiler?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITiler",
                  "canonicalReference": "@here/harp-datasource-protocol!ITiler:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tiler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!GeoJsonDataProviderOptions#workerTilerUrl:member",
              "docComment": "/**\n * Worker script hosting [[Tiler Service]]  @default `./decoder.bundle.ts`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "workerTilerUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "workerTilerUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!LinesGeometry:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LinesGeometry "
            }
          ],
          "releaseTag": "Public",
          "name": "LinesGeometry",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!LinesGeometry#featureStarts:member",
              "docComment": "/**\n * Optional list of feature start indices. The indices point into the index attribute.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "featureStarts?: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "featureStarts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!LinesGeometry#lines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lines: "
                },
                {
                  "kind": "Reference",
                  "text": "LineGroup",
                  "canonicalReference": "@here/harp-lines!LineGroup:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!LinesGeometry#objInfos:member",
              "docComment": "/**\n * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "objInfos?: "
                },
                {
                  "kind": "Reference",
                  "text": "AttributeMap",
                  "canonicalReference": "@here/harp-datasource-protocol!AttributeMap:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "objInfos",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!LinesGeometry#technique:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "technique: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "technique",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!LinesGeometry#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "GeometryType",
                  "canonicalReference": "@here/harp-datasource-protocol!GeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-omv-datasource!OMV_TILE_DECODER_SERVICE_TYPE:var",
          "docComment": "/**\n * Default OMV tile decoder service type.\n *\n * Used for requesting decoder services using [[WorkerServiceManager]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "OMV_TILE_DECODER_SERVICE_TYPE = \"omv-tile-decoder\""
            }
          ],
          "releaseTag": "Public",
          "name": "OMV_TILE_DECODER_SERVICE_TYPE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-omv-datasource!OMV_TILER_SERVICE_TYPE:var",
          "docComment": "/**\n * Default OMV tiler service type.\n *\n * Used for requesting tiler services using [[WorkerServiceManager]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "OMV_TILER_SERVICE_TYPE = \"omv-tiler\""
            }
          ],
          "releaseTag": "Public",
          "name": "OMV_TILER_SERVICE_TYPE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!OmvDataSource:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OmvDataSource extends "
            },
            {
              "kind": "Reference",
              "text": "TileDataSource",
              "canonicalReference": "@here/harp-mapview-decoder!TileDataSource:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OmvTile",
              "canonicalReference": "@here/harp-omv-datasource!OmvTile:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvDataSource",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OmvDataSource` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(m_params: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvWithRestClientParams",
                  "canonicalReference": "@here/harp-omv-datasource!OmvWithRestClientParams:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "OmvWithCustomDataProvider",
                  "canonicalReference": "@here/harp-omv-datasource!OmvWithCustomDataProvider:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m_params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource#connect:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource#removeDataFilter:member(1)",
              "docComment": "/**\n * Remove the current data filter. Will be applied to the decoder, which might be shared with other omv datasources.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeDataFilter(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "removeDataFilter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource#setDataFilter:member(1)",
              "docComment": "/**\n * Set a new data filter. Can also be done during the creation of an [[OmvDataSource]]. Will be applied to the decoder, which might be shared with other omv datasources.\n *\n * @param filterDescription - Data filter description created with [[OmvFeatureFilterDescriptionBuilder]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDataFilter(filterDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filterDescription",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setDataFilter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource#setEnableElevationOverlay:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEnableElevationOverlay(enable: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setEnableElevationOverlay"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource#setLanguages:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setLanguages(languages?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "languages",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setLanguages"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource#setPoliticalView:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPoliticalView(politicalView?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "politicalView",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setPoliticalView"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource#shouldPreloadTiles:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shouldPreloadTiles(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "shouldPreloadTiles"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSource#storageLevelOffset:member",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get storageLevelOffset(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset storageLevelOffset(levelOffset: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "storageLevelOffset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvDataSourceParameters extends "
            },
            {
              "kind": "Reference",
              "text": "DataSourceOptions",
              "canonicalReference": "@here/harp-mapview!DataSourceOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvDataSourceParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#addGroundPlane:member",
              "docComment": "/**\n * Indicates whether to add a ground plane to cover the tile completely. This is necessary for the fallback logic, such that the parent fall back tiles don't overlap the children tiles. Default is true (i.e. if not defined it is taken to be true)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addGroundPlane?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "addGroundPlane",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#concurrentDecoderScriptUrl:member",
              "docComment": "/**\n * Specify the URL to the decoder bundle. If not supplied, the default will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "concurrentDecoderScriptUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "concurrentDecoderScriptUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#copyrightInfo:member",
              "docComment": "/**\n * Optional, default copyright information of tiles provided by this data source. Implementation should provide this information from the source data if possible.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copyrightInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "CopyrightInfo",
                  "canonicalReference": "@here/harp-mapview!CopyrightInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "copyrightInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#copyrightProvider:member",
              "docComment": "/**\n * Optional copyright info provider for tiles provided by this data source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copyrightProvider?: "
                },
                {
                  "kind": "Reference",
                  "text": "CopyrightProvider",
                  "canonicalReference": "@here/harp-mapview!CopyrightProvider:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "copyrightProvider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#createTileInfo:member",
              "docComment": "/**\n * @deprecated\n *\n * Tile info is not decoded anymore. The same information can be generated implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createTileInfo?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "createTileInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#dataProvider:member",
              "docComment": "/**\n * Optionally specify the DataProvider that should be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataProvider?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataProvider",
                  "canonicalReference": "@here/harp-mapview-decoder!DataProvider:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dataProvider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#decoder:member",
              "docComment": "/**\n * Specify the decoder that should be used. If not supplied, the default will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decoder?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITileDecoder",
                  "canonicalReference": "@here/harp-datasource-protocol!ITileDecoder:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "decoder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#enableElevationOverlay:member",
              "docComment": "/**\n * Indicates whether overlay on elevation is enabled. Defaults to `false`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableElevationOverlay?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "enableElevationOverlay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#featureModifierId:member",
              "docComment": "/**\n * Identifier used to choose [[OmvFeatureModifier]]s to be applied.\n *\n * If left `undefined` at least [[OmvGenericFeatureModifier]] will be applied. The list of feature modifiers may be extended internally by some data source options such as [[politicalView]] which adds [[OmvPoliticalViewFeatureModifier]].\n *\n * @note This parameter gets applied to the decoder used in the [[OmvDataSource]] which might be shared between various [[OmvDataSource]]s.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "featureModifierId?: "
                },
                {
                  "kind": "Reference",
                  "text": "FeatureModifierId",
                  "canonicalReference": "@here/harp-omv-datasource!FeatureModifierId:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "featureModifierId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#filterDescr:member",
              "docComment": "/**\n * A description for the feature filter that can be safely passed down to the web workers. It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to guarantee correctness). This parameter gets applied to the decoder used in the [[OmvDataSource]] which might be shared between various [[OmvDataSource]]s.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filterDescr?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "filterDescr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#gatherFeatureAttributes:member",
              "docComment": "/**\n * Gather feature attributes from `OmvData`. Defaults to `false`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatherFeatureAttributes?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gatherFeatureAttributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#gatherFeatureIds:member",
              "docComment": "/**\n * Gather feature IDs from `OmvData`. Defaults to `false`. @deprecated, FeatureIds are always gathered, use [[gatherFeatureAttributes]] to gather all feature attributes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatherFeatureIds?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gatherFeatureIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#gatherRoadSegments:member",
              "docComment": "/**\n * @deprecated\n *\n * Tile info is not decoded anymore. The same information can be generated implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatherRoadSegments?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gatherRoadSegments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#maxGeometryHeight:member",
              "docComment": "/**\n * Maximum geometry height above groud level this `OmvDataSource` can produce.\n *\n * Used in first stage of frustum culling before [[Tile.maxGeometryHeight]] data is available.\n *\n * @default [[EarthConstants.MAX_BUILDING_HEIGHT]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxGeometryHeight?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxGeometryHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#politicalView:member",
              "docComment": "/**\n * Expresses specific country point of view that is used when rendering disputed features, like borders, names, etc. If undefined \"defacto\" or most widely accepted political view will be presented.\n *\n * @see featureModifiers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "politicalView?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "politicalView",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#showMissingTechniques:member",
              "docComment": "/**\n * If set to `true`, features that have no technique in the theme will be printed to the console (can be excessive!).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showMissingTechniques?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showMissingTechniques",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#skipShortLabels:member",
              "docComment": "/**\n * If not set to `false`, very short text labels will be skipped during decoding based on a heuristic.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skipShortLabels?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "skipShortLabels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters#tileFactory:member",
              "docComment": "/**\n * Optional, custom factory for [[Tile]] instances created by this [[OmvDataSource]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tileFactory?: "
                },
                {
                  "kind": "Reference",
                  "text": "TileFactory",
                  "canonicalReference": "@here/harp-mapview-decoder!TileFactory:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "OmvTile",
                  "canonicalReference": "@here/harp-omv-datasource!OmvTile:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tileFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!OmvDebugLabelsTile:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OmvDebugLabelsTile extends "
            },
            {
              "kind": "Reference",
              "text": "OmvTile",
              "canonicalReference": "@here/harp-omv-datasource!OmvTile:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvDebugLabelsTile",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!OmvDebugLabelsTile:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OmvDebugLabelsTile` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(dataSource: "
                },
                {
                  "kind": "Reference",
                  "text": "DataSource",
                  "canonicalReference": "@here/harp-mapview!DataSource:class"
                },
                {
                  "kind": "Content",
                  "text": ", tileKey: "
                },
                {
                  "kind": "Reference",
                  "text": "TileKey",
                  "canonicalReference": "@here/harp-geoutils!TileKey:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dataSource",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "tileKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvDebugLabelsTile#loadingFinished:member(1)",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadingFinished(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "loadingFinished"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions:interface",
          "docComment": "/**\n * Internal interface for options passed from the [[OmvDataSource]] to the decoder.\n *\n * @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvDecoderOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvDecoderOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#createTileInfo:member",
              "docComment": "/**\n * @deprecated\n *\n * Tile info is not decoded anymore. The same information can be generated implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createTileInfo?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "createTileInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#enableElevationOverlay:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableElevationOverlay?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "enableElevationOverlay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#featureModifiers:member",
              "docComment": "/**\n * List of user specified [[OmvFeatureModifier]]s, list order declares the order of processing.\n *\n * Each identifier is used to choose corresponding OmvFeatureModifier, if undefined at least [[OmvGenericFeatureModifier]] is added to decoder.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "featureModifiers?: "
                },
                {
                  "kind": "Reference",
                  "text": "FeatureModifierId",
                  "canonicalReference": "@here/harp-omv-datasource!FeatureModifierId:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "featureModifiers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#filterDescription:member",
              "docComment": "/**\n * A description for the feature filter which can be safely passed down to the web workers. It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to guarantee the correctness).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filterDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "filterDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#gatherFeatureAttributes:member",
              "docComment": "/**\n * Gather feature attributes from [[OmvData]]. Defaults to false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatherFeatureAttributes?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gatherFeatureAttributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#gatherRoadSegments:member",
              "docComment": "/**\n * @deprecated\n *\n * Tile info is not decoded anymore. The same information can be generated implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatherRoadSegments?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gatherRoadSegments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#politicalView:member",
              "docComment": "/**\n * Country code (lower-case ISO 3166-1 alpha-2) defining optional point of view to be used. Set to empty string (\"\") if you want to use default (widely accepted) point of view. If set to `undefined` leaves current political view decoder configuration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "politicalView?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "politicalView",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#showMissingTechniques:member",
              "docComment": "/**\n * If true, features that have no technique in the theme will be printed to the console (can be excessive!).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showMissingTechniques?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "showMissingTechniques",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#skipShortLabels:member",
              "docComment": "/**\n * If not set to `false` very short text labels will be skipped during decoding based on a heuristic.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skipShortLabels?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "skipShortLabels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvDecoderOptions#storageLevelOffset:member",
              "docComment": "/**\n * Optional storage level offset for [[Tile]]s. Default is -2.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storageLevelOffset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "storageLevelOffset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter:interface",
          "docComment": "/**\n * The `OmvFeatureFilter` is designed to work in an `OmvVisitor`/`visitOmv` combination (for example, `OmvDecoder`). Returning `false` from any of the calls terminates processing of that layer or feature.\n *\n * The `OmvFeatureFilter` is an \"early-opt-out\" filter, which cannot filter individual features, because at that point the features are not really decoded. Use the [[OmvFeatureModifier]] to filter for individual features.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvFeatureFilter "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFeatureFilter",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter#hasKindFilter:member",
              "docComment": "/**\n * Returns `true` if the filter contains rules for specific kinds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasKindFilter: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hasKindFilter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter#wantsKind:member(1)",
              "docComment": "/**\n * Return `false` if kind of object is not enabled and the geometry should not be created.\n *\n * @param kind - Tag \"kind\" of the tag.\n *\n * @returns {boolean}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsKind(kind: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "kind",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "wantsKind"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter#wantsLayer:member(1)",
              "docComment": "/**\n * Return `false` if the layer should not be processed.\n *\n * @param layer - Current layer.\n *\n * @param level - Level of tile.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsLayer(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "wantsLayer"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter#wantsLineFeature:member(1)",
              "docComment": "/**\n * Return `false` if the line feature should not be processed.\n *\n * @param layer - Current layer.\n *\n * @param feature - Current feature.\n *\n * @param level - Level of tile.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsLineFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsLineFeature"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter#wantsPointFeature:member(1)",
              "docComment": "/**\n * Return `false` if the point feature should not be processed.\n *\n * @param layer - Current layer.\n *\n * @param feature - Current feature.\n *\n * @param level - Level of tile.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsPointFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsPointFeature"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter#wantsPolygonFeature:member(1)",
              "docComment": "/**\n * Return `false` if the polygon feature should not be processed.\n *\n * @param layer - Current layer.\n *\n * @param feature - Current feature.\n *\n * @param level - Level of tile.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsPolygonFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsPolygonFeature"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription:interface",
          "docComment": "/**\n * Internal type of a complete [[OmvFeatureFilter]] description, should not be publicly available.\n *\n * @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvFeatureFilterDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFeatureFilterDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#kindsToIgnore:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kindsToIgnore: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "kindsToIgnore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#kindsToProcess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kindsToProcess: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "kindsToProcess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#layersToIgnore:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layersToIgnore: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvLayerFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvLayerFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layersToIgnore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#layersToProcess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layersToProcess: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvLayerFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvLayerFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layersToProcess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#linesToIgnore:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linesToIgnore: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "linesToIgnore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#linesToProcess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linesToProcess: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "linesToProcess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#pointsToIgnore:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pointsToIgnore: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pointsToIgnore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#pointsToProcess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pointsToProcess: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pointsToProcess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#polygonsToIgnore:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "polygonsToIgnore: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "polygonsToIgnore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#polygonsToProcess:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "polygonsToProcess: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "polygonsToProcess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#processLayersDefault:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processLayersDefault: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "processLayersDefault",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#processLinesDefault:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processLinesDefault: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "processLinesDefault",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#processPointsDefault:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processPointsDefault: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "processPointsDefault",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription#processPolygonsDefault:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processPolygonsDefault: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "processPolygonsDefault",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder:class",
          "docComment": "/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well as an [[OmvFeatureModifier]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OmvFeatureFilterDescriptionBuilder "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFeatureFilterDescriptionBuilder",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder:constructor(1)",
              "docComment": "/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well as an [[OmvFeatureModifier]].\n *\n * @param processLayersDefault - If `true`, all unspecified layers will be processed. If `false`, all unspecified layers will be ignored.\n *\n * @param processPointsDefault - If `true`, all unspecified point features will be processed. If `false`, all unspecified point features will be ignored.\n *\n * @param processLinesDefault - If `true`, all unspecified line features will be processed. If `false`, all unspecified line features will be ignored.\n *\n * @param processPolygonsDefault - If `true`, all unspecified polygon features will be processed. If `false`, all unspecified polygon features will be ignored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#createDescription:member(1)",
              "docComment": "/**\n * Create a filter description that can be passed as an option to the [[OmvDataSource]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createDescription(): "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "createDescription"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#ignoreKinds:member(1)",
              "docComment": "/**\n * Add all the specified strings as \"disabledKinds\".\n *\n * @param disabledKinds - List of kinds that should _not_ be generated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignoreKinds(disabledKinds: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "disabledKinds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "ignoreKinds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#ignoreLayer:member(1)",
              "docComment": "/**\n * Add a layer that should be ignored.\n *\n * @param layer - Layer name to be matched.\n *\n * @param match - Match condition.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignoreLayer(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", match?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterString.StringMatch",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch:enum"
                },
                {
                  "kind": "Content",
                  "text": ", minLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", maxLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "match",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "minLevel",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "maxLevel",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "ignoreLayer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#ignoreLine:member(1)",
              "docComment": "/**\n * Ignore a line feature.\n *\n * @param options - Feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignoreLine(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.FeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "ignoreLine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#ignoreLines:member(1)",
              "docComment": "/**\n * Ignore line features.\n *\n * @param options - Multi feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignoreLines(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.MultiFeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "ignoreLines"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#ignorePoint:member(1)",
              "docComment": "/**\n * Add a point feature that should be ignored.\n *\n * @param options - Feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignorePoint(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.FeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "ignorePoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#ignorePoints:member(1)",
              "docComment": "/**\n * Add point features that should be ignored.\n *\n * @param options - Multi feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignorePoints(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.MultiFeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "ignorePoints"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#ignorePolygon:member(1)",
              "docComment": "/**\n * Ignore a valid polygon feature.\n *\n * @param options - Feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignorePolygon(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.FeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "ignorePolygon"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#ignorePolygons:member(1)",
              "docComment": "/**\n * Ignore polygon features.\n *\n * @param options - Multi feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignorePolygons(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.MultiFeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "ignorePolygons"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#processKinds:member(1)",
              "docComment": "/**\n * Add all the specified strings as \"enabledKinds\".\n *\n * @param enabledKinds - List of kinds that should be generated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processKinds(enabledKinds: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabledKinds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "processKinds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#processLayer:member(1)",
              "docComment": "/**\n * Add a layer that should be processed.\n *\n * @param layer - Layer name to be matched.\n *\n * @param match - Match condition.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processLayer(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", match?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterString.StringMatch",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch:enum"
                },
                {
                  "kind": "Content",
                  "text": ", minLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", maxLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "match",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "minLevel",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "maxLevel",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "processLayer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#processLine:member(1)",
              "docComment": "/**\n * Add a valid line feature.\n *\n * @param options - Feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processLine(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.FeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "processLine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#processLines:member(1)",
              "docComment": "/**\n * Add valid line features.\n *\n * @param options - Multi feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processLines(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.MultiFeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "processLines"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#processPoint:member(1)",
              "docComment": "/**\n * Add a valid point feature.\n *\n * @param options - Feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processPoint(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.FeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "processPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#processPoints:member(1)",
              "docComment": "/**\n * Add valid point features.\n *\n * @param options - Multi feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processPoints(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.MultiFeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "processPoints"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#processPolygon:member(1)",
              "docComment": "/**\n * Add a valid polygon feature.\n *\n * @param options - Feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processPolygon(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.FeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "processPolygon"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder#processPolygons:member(1)",
              "docComment": "/**\n * Add valid polygon features.\n *\n * @param options - Multi feature options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processPolygons(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescriptionBuilder.MultiFeatureOption",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "processPolygons"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace OmvFeatureFilterDescriptionBuilder "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFeatureFilterDescriptionBuilder",
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption:interface",
              "docComment": "/**\n * Description of a single feature.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface FeatureOption "
                }
              ],
              "releaseTag": "Public",
              "name": "FeatureOption",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption#featureAttribute:member",
                  "docComment": "/**\n * Feature attribute to match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "featureAttribute?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvFilterFeatureAttribute",
                      "canonicalReference": "@here/harp-omv-datasource!OmvFilterFeatureAttribute:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "featureAttribute",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption#featureClass:member",
                  "docComment": "/**\n * Optional class to match. If specified, but does not match, the feature is ignored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "featureClass: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "featureClass",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption#geomType:member",
                  "docComment": "/**\n * Optional geometry type to be limited to. If specified, but does not match, the feature is ignored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "geomType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvGeometryType",
                      "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvGeometryType",
                      "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[] | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "geomType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption#layer:member",
                  "docComment": "/**\n * Layer name to be matched.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "layer: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "layer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption#matchClass:member",
                  "docComment": "/**\n * Match condition for `featureClass`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchClass?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvFilterString.StringMatch",
                      "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchClass",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption#matchLayer:member",
                  "docComment": "/**\n * Match condition for the layer name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchLayer?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvFilterString.StringMatch",
                      "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchLayer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption#maxLevel:member",
                  "docComment": "/**\n * Maximum tile level to match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maxLevel?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maxLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.FeatureOption#minLevel:member",
                  "docComment": "/**\n * Minimum tile level to match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minLevel?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption:interface",
              "docComment": "/**\n * Description for multiple features.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface MultiFeatureOption "
                }
              ],
              "releaseTag": "Public",
              "name": "MultiFeatureOption",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption#featureAttribute:member",
                  "docComment": "/**\n * Feature attribute to match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "featureAttribute?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvFilterFeatureAttribute",
                      "canonicalReference": "@here/harp-omv-datasource!OmvFilterFeatureAttribute:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "featureAttribute",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption#featureClasses:member",
                  "docComment": "/**\n * Optional classes to match. If specified, but does not match, the feature is ignored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "featureClasses?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvFilterString",
                      "canonicalReference": "@here/harp-omv-datasource!OmvFilterString:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "featureClasses",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption#geomTypes:member",
                  "docComment": "/**\n * Optional geometry type to be limited to. If specified, but does not match, the feature is ignored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "geomTypes?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvGeometryType",
                      "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvGeometryType",
                      "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[] | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "geomTypes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption#layer:member",
                  "docComment": "/**\n * Layer name to be matched.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "layer: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "layer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption#matchLayer:member",
                  "docComment": "/**\n * Match condition for the layer name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchLayer?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OmvFilterString.StringMatch",
                      "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchLayer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption#maxLevel:member",
                  "docComment": "/**\n * Maximum tile level to match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maxLevel?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maxLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.MultiFeatureOption#minLevel:member",
                  "docComment": "/**\n * Minimum tile level to match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minLevel?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions:interface",
              "docComment": "/**\n * Options for `OmvFeatureFilterDescriptionBuilder`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface OmvFeatureFilterDescriptionBuilderOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "OmvFeatureFilterDescriptionBuilderOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions#processLayersDefault:member",
                  "docComment": "/**\n * If `true`, all unspecified layers will be processed. If `false`, all unspecified layers will be ignored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "processLayersDefault?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "processLayersDefault",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions#processLinesDefault:member",
                  "docComment": "/**\n * If `true`, all unspecified line features will be processed. If `false`, all unspecified line features will be ignored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "processLinesDefault?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "processLinesDefault",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions#processPointsDefault:member",
                  "docComment": "/**\n * If `true`, all unspecified point features will be processed. If `false`, all unspecified point features will be ignored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "processPointsDefault?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "processPointsDefault",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions#processPolygonsDefault:member",
                  "docComment": "/**\n * If `true`, all unspecified polygon features will be processed. If `false`, all unspecified polygon features will be ignored.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "processPolygonsDefault?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "processPolygonsDefault",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvFeatureModifier:interface",
          "docComment": "/**\n * The `OmvFeatureModifier` can be used to filter individual features. It gets passed in the [[Env]] of the feature, which contains all the values that can be searched for in a style. If a filter function returns false, the feature is ignored, and no geometry is being created.\n *\n * In addition to pure filtering, the `OmvFeatureModifier` can also modify the [[Env]] of the feature, or even add new properties to the feature, for example, traffic states. The `OmvFeatureModifier` is executed before the styles are selected, so the geometry is created with the modified feature properties.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvFeatureModifier "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFeatureModifier",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureModifier#doProcessLineFeature:member(1)",
              "docComment": "/**\n * Check if the line feature described by `env` should be processed. The properties can be modified or added to.\n *\n * @param layer - Current layer.\n *\n * @param env - Properties of line feature.\n *\n * @param level - Level of tile.\n *\n * @returns `false` to ignore feature.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doProcessLineFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", env: "
                },
                {
                  "kind": "Reference",
                  "text": "MapEnv",
                  "canonicalReference": "@here/harp-datasource-protocol!MapEnv:class"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "doProcessLineFeature"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureModifier#doProcessPointFeature:member(1)",
              "docComment": "/**\n * Check if the point feature described by `env` should be processed. The properties can be modified or added to.\n *\n * @param layer - Current layer.\n *\n * @param env - Properties of point feature.\n *\n * @param level - Level of tile.\n *\n * @returns `false` to ignore feature.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doProcessPointFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", env: "
                },
                {
                  "kind": "Reference",
                  "text": "MapEnv",
                  "canonicalReference": "@here/harp-datasource-protocol!MapEnv:class"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "doProcessPointFeature"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureModifier#doProcessPolygonFeature:member(1)",
              "docComment": "/**\n * Check if the polygon feature described by `env` should be processed. The properties can be modified or added to.\n *\n * @param layer - Current layer.\n *\n * @param env - Properties of polygon feature.\n *\n * @param level - Level of tile.\n *\n * @returns `false` to ignore feature.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doProcessPolygonFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", env: "
                },
                {
                  "kind": "Reference",
                  "text": "MapEnv",
                  "canonicalReference": "@here/harp-datasource-protocol!MapEnv:class"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "doProcessPolygonFeature"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface",
          "docComment": "/**\n * Internal type of a single filter description, Should not be publicly available.\n *\n * @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvFilterDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFilterDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription#classes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "classes?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterString",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "classes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription#featureAttribute:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "featureAttribute?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterFeatureAttribute",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterFeatureAttribute:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "featureAttribute",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription#geometryTypes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "geometryTypes?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "geometryTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription#layerName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layerName: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterString",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "layerName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription#maxLevel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxLevel: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription#minLevel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minLevel: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvFilterFeatureAttribute:interface",
          "docComment": "/**\n * Definition of a filter for a feature attribute\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvFilterFeatureAttribute "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFilterFeatureAttribute",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterFeatureAttribute#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterFeatureAttribute#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@here/harp-datasource-protocol!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvFilterString:interface",
          "docComment": "/**\n * Definition of a filter.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvFilterString "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFilterString",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterString#match:member",
              "docComment": "/**\n * Match condition\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "match: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterString.StringMatch",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "match",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterString#value:member",
              "docComment": "/**\n * String value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@here/harp-omv-datasource!OmvFilterString:namespace",
          "docComment": "/**\n * Adding the match condition type and the matching function to the namespace of `OmvFilterString`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace OmvFilterString "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvFilterString",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.matchString:function(1)",
              "docComment": "/**\n * Check for a string against a filter.\n *\n * @param str - The string to check against a filter.\n *\n * @param filterString - The filter containing the match condition.\n *\n * @returns `true` if the match condition is satisfied.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function matchString(str: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", filterString: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterString",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "str",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "filterString",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "matchString"
            },
            {
              "kind": "Enum",
              "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch:enum",
              "docComment": "/**\n * Match condition.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum StringMatch "
                }
              ],
              "releaseTag": "Public",
              "name": "StringMatch",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch.Any:member",
                  "docComment": "/**\n * Matches any.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "Any = "
                    },
                    {
                      "kind": "Content",
                      "text": "0"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Any",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch.Contains:member",
                  "docComment": "/**\n * Matches if a test string contains a filter string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "Contains = "
                    },
                    {
                      "kind": "Content",
                      "text": "3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Contains",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch.EndsWith:member",
                  "docComment": "/**\n * Matches if a test string ends with a filter string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "EndsWith = "
                    },
                    {
                      "kind": "Content",
                      "text": "4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "EndsWith",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch.Match:member",
                  "docComment": "/**\n * Exact match.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "Match = "
                    },
                    {
                      "kind": "Content",
                      "text": "1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Match",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString.StringMatch.StartsWith:member",
                  "docComment": "/**\n * Matches if a test string starts with a filter string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "StartsWith = "
                    },
                    {
                      "kind": "Content",
                      "text": "2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "StartsWith",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureFilter:class",
          "docComment": "/**\n * `OmvFeatureFilter` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData` features before they are completely decoded.\n *\n * @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OmvGenericFeatureFilter implements "
            },
            {
              "kind": "Reference",
              "text": "OmvFeatureFilter",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilter:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvGenericFeatureFilter",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureFilter:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OmvGenericFeatureFilter` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(description: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureFilter#hasKindFilter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasKindFilter(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hasKindFilter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureFilter#wantsKind:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsKind(kind: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "kind",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "wantsKind"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureFilter#wantsLayer:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsLayer(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "wantsLayer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureFilter#wantsLineFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsLineFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsLineFeature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureFilter#wantsPointFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsPointFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsPointFeature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureFilter#wantsPolygonFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wantsPolygonFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", geometryType: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvGeometryType",
                  "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", level: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "geometryType",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "wantsPolygonFeature"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureModifier:class",
          "docComment": "/**\n * `OmvFeatureModifier` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData` features before they are completely decoded.\n *\n * @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OmvGenericFeatureModifier implements "
            },
            {
              "kind": "Reference",
              "text": "OmvFeatureModifier",
              "canonicalReference": "@here/harp-omv-datasource!OmvFeatureModifier:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvGenericFeatureModifier",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureModifier:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OmvGenericFeatureModifier` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(description: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFeatureFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFeatureFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureModifier#doProcessFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected doProcessFeature(itemsToProcess: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", itemsToIgnore: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", env: "
                },
                {
                  "kind": "Reference",
                  "text": "MapEnv",
                  "canonicalReference": "@here/harp-datasource-protocol!MapEnv:class"
                },
                {
                  "kind": "Content",
                  "text": ", defaultResult: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "itemsToProcess",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "itemsToIgnore",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                },
                {
                  "parameterName": "defaultResult",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ],
              "name": "doProcessFeature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureModifier#doProcessLineFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doProcessLineFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", env: "
                },
                {
                  "kind": "Reference",
                  "text": "MapEnv",
                  "canonicalReference": "@here/harp-datasource-protocol!MapEnv:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "doProcessLineFeature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureModifier#doProcessPointFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doProcessPointFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", env: "
                },
                {
                  "kind": "Reference",
                  "text": "MapEnv",
                  "canonicalReference": "@here/harp-datasource-protocol!MapEnv:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "doProcessPointFeature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureModifier#doProcessPolygonFeature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doProcessPolygonFeature(layer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", env: "
                },
                {
                  "kind": "Reference",
                  "text": "MapEnv",
                  "canonicalReference": "@here/harp-datasource-protocol!MapEnv:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "doProcessPolygonFeature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureModifier.matchAttribute:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static matchAttribute(layerName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", env: "
                },
                {
                  "kind": "Reference",
                  "text": "MapEnv",
                  "canonicalReference": "@here/harp-datasource-protocol!MapEnv:class"
                },
                {
                  "kind": "Content",
                  "text": ", items: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layerName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                }
              ],
              "name": "matchAttribute"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvGenericFeatureModifier.matchItems:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static matchItems(layerName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", featureClass: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", items: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterDescription",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "layerName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "featureClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                }
              ],
              "name": "matchItems"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum OmvGeometryType "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvGeometryType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType.LINESTRING:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LINESTRING = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "LINESTRING",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType.POINT:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "POINT = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "POINT",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType.POLYGON:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "POLYGON = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "POLYGON",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-omv-datasource!OmvGeometryType.UNKNOWN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UNKNOWN = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "UNKNOWN",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvLayerFilterDescription:interface",
          "docComment": "/**\n * Internal type of a layer filter description, Should not be publicly available.\n *\n * @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvLayerFilterDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvLayerFilterDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvLayerFilterDescription#maxLevel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxLevel: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvLayerFilterDescription#minLevel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minLevel: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvLayerFilterDescription#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvFilterString",
                  "canonicalReference": "@here/harp-omv-datasource!OmvFilterString:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!OmvRestClient:class",
          "docComment": "/**\n * REST client supporting getting protobuf OMV Tile from REST-based servers.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OmvRestClient implements "
            },
            {
              "kind": "Reference",
              "text": "DataProvider",
              "canonicalReference": "@here/harp-mapview-decoder!DataProvider:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvRestClient",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClient:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OmvRestClient` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvRestClientParameters",
                  "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClient#connect:member(1)",
              "docComment": "/**\n * Overriding abstract method, in this case doing nothing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClient#getTile:member(1)",
              "docComment": "/**\n * Asynchronously fetches a tile from this restful server.\n *\n * **Note:** If the tile doesn't exist, a successful response with a `404` status code is returned.\n *\n * @param tileKey - The tile key of the tile.\n *\n * @param tileRequestInit - Optional request options to be passed to fetch when downloading a tile.\n *\n * @returns A `Promise` of the HTTP response that contains the payload of the requested tile.\n *\n * @example\n * ```typescript\n * const response = layer.getTile(tileKey);\n * if (!response.ok) {\n *     // a network error happened\n *     console.error(\"Unable to download tile\", response.statusText);\n *     return;\n * }\n * if (response.status === 404) {\n *     // 404 -, no data exists at the given tile. Do nothing.\n *     return;\n * }\n *\n * // the response is ok and contains data, access it e.g. as arrayBuffer:\n * const payload = await response.arrayBuffer();\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTile(tileKey: "
                },
                {
                  "kind": "Reference",
                  "text": "TileKey",
                  "canonicalReference": "@here/harp-geoutils!TileKey:class"
                },
                {
                  "kind": "Content",
                  "text": ", abortSignal?: "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignal",
                  "canonicalReference": "!AbortSignal:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBufferLike",
                  "canonicalReference": "!ArrayBufferLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tileKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "abortSignal",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "getTile"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClient#params:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly params: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvRestClientParameters",
                  "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClient#ready:member(1)",
              "docComment": "/**\n * Overriding abstract method, in this case always returning `true`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ready(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "ready"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvRestClientParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvRestClientParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#apiFormat:member",
              "docComment": "/**\n * The REST API format to use for the tile path generation, will default to the HERE Vector Tile API.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiFormat?: "
                },
                {
                  "kind": "Reference",
                  "text": "APIFormat",
                  "canonicalReference": "@here/harp-omv-datasource!APIFormat:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "apiFormat",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#authenticationCode:member",
              "docComment": "/**\n * Authentication code used for the different APIs.\n *\n * When [[AuthenticationCodeProvider]] is is used as value, the provider is called before each to get currently valid authentication code/token.\n *\n * @see [[APIFormat]] for the query parameter this is used with.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticationCode?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationCodeProvider",
                  "canonicalReference": "@here/harp-omv-datasource!AuthenticationCodeProvider:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "authenticationCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#authenticationMethod:member",
              "docComment": "/**\n * Specifies [[AuthMethod]] to be used when requesting tiles.\n *\n * Defaults for each [[APIFormat]] are documented with each format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticationMethod?: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationMethodInfo",
                  "canonicalReference": "@here/harp-omv-datasource!AuthenticationMethodInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "authenticationMethod",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#baseUrl:member",
              "docComment": "/**\n * The base URL of the REST Tile Service.  @see [[APIFormat]] for the definition of `baseUrl`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "baseUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#downloadManager:member",
              "docComment": "/**\n * Transfer Manager to use; creates an own instance if none passed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "downloadManager?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITransferManager",
                  "canonicalReference": "@here/harp-transfer-manager!ITransferManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "downloadManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#getBearerToken:member",
              "docComment": "/**\n * Function to retrieve the Bearer Token\n *\n * @deprecated\n *\n * Please use [[authenticationCode]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBearerToken?: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "getBearerToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#tilingScheme:member",
              "docComment": "/**\n * Tiling scheme is used in some of the APIs, not implemented yet.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tilingScheme?: "
                },
                {
                  "kind": "Reference",
                  "text": "TilingScheme",
                  "canonicalReference": "@here/harp-geoutils!TilingScheme:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tilingScheme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#url:member",
              "docComment": "/**\n * `URL` pattern used to fetch tile files.\n *\n * `URL` with special keywords replaced to retrieve specific tile: - `{z}` - zoom level of tile,  @see [[TileKey.level]] - `{x}` - horizontal coordinate of tile (column number),  @see [[TileKey.column]] - `{y}` - vertical coordinate of Tile (row number),  @see [[TileKey.row]]\n *\n * Examples of `url` patterns:\n * ```\n *   https://my-base-url.com/vector-tiles/{z}/{x}/{y}.mvt\n *   https://xyz.api.here.com/tiles/herebase.02/{z}/{x}/{y}/omv\n *   https://xyz.api.here.com/tiles/osmbase/512/all/{z}/{x}/{y}.mvt\n * ```\n *\n * Note: To add authentication headers and/or query params, use [[authMethod]], [[urlParams]] properties or embed token directly in `url`.\n *\n * Complete examples:\n * ```\n * // XYZ OSM with authentication using query param\n * {\n *     url: \"https://xyz.api.here.com/tiles/osmbase/512/all/{z}/{x}/{y}.mvt\",\n *     urlParams: {\n *           access_token: accessToken\n *     },\n * }\n * // HERE Vector Tile with authentication using bearer token retrieved by callback\n * {\n *     url: \"https://vector.hereapi.com/v2/vectortiles/base/mc/{z}/{x}/{y}/omv\",\n *     authenticationMethod: AuthenticationTypeBearer,\n *     authenticationCode: () => getBearerToken()\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters#urlParams:member",
              "docComment": "/**\n * Array of query parameters to be appended at the end of the url. It is empty by default.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "urlParams?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "urlParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-omv-datasource!OmvTile:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OmvTile extends "
            },
            {
              "kind": "Reference",
              "text": "Tile",
              "canonicalReference": "@here/harp-mapview!Tile:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvTile",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-omv-datasource!OmvTile:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OmvTile` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(dataSource: "
                },
                {
                  "kind": "Reference",
                  "text": "DataSource",
                  "canonicalReference": "@here/harp-mapview!DataSource:class"
                },
                {
                  "kind": "Content",
                  "text": ", tileKey: "
                },
                {
                  "kind": "Reference",
                  "text": "TileKey",
                  "canonicalReference": "@here/harp-geoutils!TileKey:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dataSource",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "tileKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-omv-datasource!OmvTileFactory:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OmvTileFactory "
            }
          ],
          "releaseTag": "Public",
          "name": "OmvTileFactory",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@here/harp-omv-datasource!OmvTileFactory#createTile:member(1)",
              "docComment": "/**\n * Create an instance of [[OmvTile]] or a subclass.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createTile(dataSource: "
                },
                {
                  "kind": "Reference",
                  "text": "OmvDataSource",
                  "canonicalReference": "@here/harp-omv-datasource!OmvDataSource:class"
                },
                {
                  "kind": "Content",
                  "text": ", tileKey: "
                },
                {
                  "kind": "Reference",
                  "text": "TileKey",
                  "canonicalReference": "@here/harp-geoutils!TileKey:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "OmvTile",
                  "canonicalReference": "@here/harp-omv-datasource!OmvTile:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dataSource",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "tileKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "createTile"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@here/harp-omv-datasource!OmvWithCustomDataProvider:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OmvWithCustomDataProvider = "
            },
            {
              "kind": "Reference",
              "text": "OmvDataSourceParameters",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    dataProvider: "
            },
            {
              "kind": "Reference",
              "text": "DataProvider",
              "canonicalReference": "@here/harp-mapview-decoder!DataProvider:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OmvWithCustomDataProvider",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@here/harp-omv-datasource!OmvWithRestClientParams:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OmvWithRestClientParams = "
            },
            {
              "kind": "Reference",
              "text": "OmvRestClientParameters",
              "canonicalReference": "@here/harp-omv-datasource!OmvRestClientParameters:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "OmvDataSourceParameters",
              "canonicalReference": "@here/harp-omv-datasource!OmvDataSourceParameters:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OmvWithRestClientParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        }
      ]
    }
  ]
}
