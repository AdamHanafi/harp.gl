{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.8.10",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@here/harp-materials!",
  "docComment": "/**\n * Materials defining the appearance of map objects.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n",
  "name": "@here/harp-materials",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@here/harp-materials!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!CirclePointsMaterial:class",
          "docComment": "/**\n * Material designed to render circle points. Note that it is always transparent since the circle shape is created with an alpha channel to benefit an antialising that a mere `discard` could not bring.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CirclePointsMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterial",
              "canonicalReference": "three!ShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CirclePointsMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!CirclePointsMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new `CirclePointsMaterial`.\n *\n * @param parameters - The constructor's parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(parameters?: "
                },
                {
                  "kind": "Reference",
                  "text": "CirclePointsMaterialParameters",
                  "canonicalReference": "@here/harp-materials!CirclePointsMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!CirclePointsMaterial#color:member",
              "docComment": "/**\n * Gets the diffuse.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get color(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset color(color: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!CirclePointsMaterial.DEFAULT_CIRCLE_SIZE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly DEFAULT_CIRCLE_SIZE = 1;"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_CIRCLE_SIZE",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!CirclePointsMaterial#opacity:member",
              "docComment": "/**\n * Get circle opacity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get opacity(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset opacity(opacity: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "opacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!CirclePointsMaterial#size:member",
              "docComment": "/**\n * Gets the circle screen size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset size(size: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!CirclePointsMaterialParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new [[HighPrecisionPointMaterial]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CirclePointsMaterialParameters extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterialParameters",
              "canonicalReference": "three!ShaderMaterialParameters:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CirclePointsMaterialParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!CirclePointsMaterialParameters#color:member",
              "docComment": "/**\n * Point color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!CirclePointsMaterialParameters#size:member",
              "docComment": "/**\n * Point size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "size?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!CopyMaterial:class",
          "docComment": "/**\n * The material is used for composing.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CopyMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterial",
              "canonicalReference": "three!ShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CopyMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!CopyMaterial:constructor(1)",
              "docComment": "/**\n * The constructor of `CopyMaterial`.\n *\n * @param uniforms - The [[CopyShader]]'s uniforms.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(uniforms: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [uniformName: string]: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "IUniform",
                  "canonicalReference": "three!IUniform:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uniforms",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-materials!CopyShader:var",
          "docComment": "/**\n * The base shader to use for [[MapView]]'s composing passes, like [[MSAAMaterial]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CopyShader: "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "Shader",
              "canonicalReference": "three!Shader:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "CopyShader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-materials!DEFINE_BOOL_FALSE:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFINE_BOOL_FALSE: "
            },
            {
              "kind": "Content",
              "text": "undefined"
            }
          ],
          "releaseTag": "Public",
          "name": "DEFINE_BOOL_FALSE",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-materials!DEFINE_BOOL_TRUE:var",
          "docComment": "/**\n * Values for boolean shader defines\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFINE_BOOL_TRUE = \"\""
            }
          ],
          "releaseTag": "Public",
          "name": "DEFINE_BOOL_TRUE",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!disableBlending:function(1)",
          "docComment": "/**\n * Disable alpha blending using THREE.CustomBlending mode, switches to [[THREE.NormalBlending]].\n *\n * @note Blending mode change does not require material update.  @see THREE.Material.needsUpdate.  @see enableBlending.\n *\n * @param material - The material or material parameters to modify.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function disableBlending(material: "
            },
            {
              "kind": "Content",
              "text": "(THREE."
            },
            {
              "kind": "Reference",
              "text": "Material",
              "canonicalReference": "three!Material:class"
            },
            {
              "kind": "Content",
              "text": " | THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterialParameters",
              "canonicalReference": "three!ShaderMaterialParameters:interface"
            },
            {
              "kind": "Content",
              "text": ") & "
            },
            {
              "kind": "Reference",
              "text": "ForcedBlending",
              "canonicalReference": "@here/harp-materials!ForcedBlending:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "material",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "name": "disableBlending"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!DisplacementFeature:interface",
          "docComment": "/**\n * Interface to be implemented by materials that use displacement maps to overlay geometry on elevation data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DisplacementFeature extends "
            },
            {
              "kind": "Reference",
              "text": "HiddenThreeJSMaterialProperties",
              "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DisplacementFeature",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!DisplacementFeature#displacementMap:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displacementMap: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displacementMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DisplacementFeatureMixin implements "
            },
            {
              "kind": "Reference",
              "text": "DisplacementFeature",
              "canonicalReference": "@here/harp-materials!DisplacementFeature:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "MixinShaderProperties",
              "canonicalReference": "@here/harp-materials!~MixinShaderProperties:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DisplacementFeatureMixin",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#addDisplacementProperties:member(1)",
              "docComment": "/**\n * The mixin class should call this method to register the property [[displacementMap]]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addDisplacementProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addDisplacementProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#applyDisplacementParameters:member(1)",
              "docComment": "/**\n * Apply the displacementMap value from the parameters to the respective properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyDisplacementParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplacementFeatureParameters",
                  "canonicalReference": "@here/harp-materials!DisplacementFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyDisplacementParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#copyDisplacementParameters:member(1)",
              "docComment": "/**\n * Copy displacementMap from other DisplacementFeature.\n *\n * @param source - The material to copy property values from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyDisplacementParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplacementFeature",
                  "canonicalReference": "@here/harp-materials!DisplacementFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyDisplacementParameters"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#defines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defines?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#displacementMap:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get displacementMap(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset displacementMap(map: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null);"
                }
              ],
              "releaseTag": "Public",
              "name": "displacementMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#getDisplacementMap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getDisplacementMap(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getDisplacementMap"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#needsUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "needsUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "needsUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#onBeforeCompile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBeforeCompile?: "
                },
                {
                  "kind": "Reference",
                  "text": "CompileCallback",
                  "canonicalReference": "@here/harp-materials!~CompileCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onBeforeCompile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#setDisplacementMap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected setDisplacementMap(map: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "map",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setDisplacementMap"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#shaderDefines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shaderDefines?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shaderDefines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#shaderUniforms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shaderUniforms?: "
                },
                {
                  "kind": "Reference",
                  "text": "UniformsType",
                  "canonicalReference": "@here/harp-materials!~UniformsType:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shaderUniforms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureMixin#uniformsNeedUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uniformsNeedUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "uniformsNeedUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!DisplacementFeatureParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new implementor of [[DisplacementFeature]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DisplacementFeatureParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "DisplacementFeatureParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureParameters#displacementMap:member",
              "docComment": "/**\n * Texture used for vertex displacement along their normals.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displacementMap?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displacementMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!EdgeMaterial:class",
          "docComment": "/**\n * Material designed to render the edges of extruded buildings using GL_LINES. It supports solid colors, vertex colors, color mixing and distance fading.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EdgeMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "RawShaderMaterial",
              "canonicalReference": "three!RawShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "FadingFeature",
              "canonicalReference": "@here/harp-materials!FadingFeature:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ExtrusionFeature",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "DisplacementFeature",
              "canonicalReference": "@here/harp-materials!DisplacementFeature:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EdgeMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!EdgeMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new `EdgeMaterial`.\n *\n * @param params - `EdgeMaterial` parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "EdgeMaterialParameters",
                  "canonicalReference": "@here/harp-materials!EdgeMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!EdgeMaterial#color:member",
              "docComment": "/**\n * Edge color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get color(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset color(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!EdgeMaterial#colorMix:member",
              "docComment": "/**\n * Color mix value. Mixes between vertexColors and edgeColor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get colorMix(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset colorMix(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "colorMix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!EdgeMaterial.DEFAULT_COLOR_MIX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_COLOR_MIX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_COLOR_MIX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!EdgeMaterial.DEFAULT_COLOR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_COLOR: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_COLOR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!EdgeMaterial#displacementMap:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get displacementMap(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset displacementMap(map: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null);"
                }
              ],
              "releaseTag": "Public",
              "name": "displacementMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!EdgeMaterial#extrusionRatio:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get extrusionRatio(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset extrusionRatio(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "extrusionRatio",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!EdgeMaterial#fadeFar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fadeFar(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fadeFar(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeFar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!EdgeMaterial#fadeNear:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fadeNear(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fadeNear(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeNear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 6
            },
            {
              "startIndex": 7,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!EdgeMaterialParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new [[EdgeMaterial]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EdgeMaterialParameters extends "
            },
            {
              "kind": "Reference",
              "text": "FadingFeatureParameters",
              "canonicalReference": "@here/harp-materials!FadingFeatureParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "DisplacementFeatureParameters",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ExtrusionFeatureParameters",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EdgeMaterialParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!EdgeMaterialParameters#color:member",
              "docComment": "/**\n * Edge color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!EdgeMaterialParameters#colorMix:member",
              "docComment": "/**\n * Color mix value. Mixes between vertexColors and edgeColor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "colorMix?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "colorMix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!enableBlending:function(1)",
          "docComment": "/**\n * Enable alpha blending using THREE.CustomBlending setup.\n *\n * Function enables blending using one of predefined modes, for both color and alpha components: - Src: [[THREE.SrcAlphaFactor]], Dst: [[THREE.OneMinusSrcAlphaFactor]] - Src: [[THREE.OneFactor]], Dst: [[THREE.OneMinusSrcAlphaFactor]] The second blending equation is used when [[THREE.Material.premultipliedAlpha]] is enabled for this material.  @note Blending mode change does not require material update.  @see THREE.Material.needsUpdate.\n *\n * @param material - The material or material parameters to modify.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function enableBlending(material: "
            },
            {
              "kind": "Content",
              "text": "(THREE."
            },
            {
              "kind": "Reference",
              "text": "Material",
              "canonicalReference": "three!Material:class"
            },
            {
              "kind": "Content",
              "text": " | THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterialParameters",
              "canonicalReference": "three!ShaderMaterialParameters:interface"
            },
            {
              "kind": "Content",
              "text": ") & "
            },
            {
              "kind": "Reference",
              "text": "ForcedBlending",
              "canonicalReference": "@here/harp-materials!ForcedBlending:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "material",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "name": "enableBlending"
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!enforceBlending:function(1)",
          "docComment": "/**\n * THREE.js is enabling blending only when transparent is `true` or when a blend mode different than `NormalBlending` is set. Since we don't want to set transparent to true and mess up the render order we set `CustomBlending` with the same parameters as the `NormalBlending`.\n *\n * @param material - `Material` that should use blending  @note This function should not be used in frame update after material has been passed to WebGL. In such cases use [[enableBlending]] instead.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function enforceBlending(material: "
            },
            {
              "kind": "Content",
              "text": "(THREE."
            },
            {
              "kind": "Reference",
              "text": "Material",
              "canonicalReference": "three!Material:class"
            },
            {
              "kind": "Content",
              "text": " | THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterialParameters",
              "canonicalReference": "three!ShaderMaterialParameters:interface"
            },
            {
              "kind": "Content",
              "text": ") & "
            },
            {
              "kind": "Reference",
              "text": "ForcedBlending",
              "canonicalReference": "@here/harp-materials!ForcedBlending:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "material",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "name": "enforceBlending"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface",
          "docComment": "/**\n * Base interface for all objects that should have animated extrusion effect. The implementation of the actual ExtrusionFeature is done with the help of the mixin class [[ExtrusionFeatureMixin]] and a set of supporting functions in the namespace of the same name.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExtrusionFeature extends "
            },
            {
              "kind": "Reference",
              "text": "HiddenThreeJSMaterialProperties",
              "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "MixinShaderProperties",
              "canonicalReference": "@here/harp-materials!~MixinShaderProperties:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ExtrusionFeature",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature#extrusionRatio:member",
              "docComment": "/**\n * Ratio of the extruded objects, where `1.0` is the default value. Minimum suggested value is `0.01`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extrusionRatio?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "extrusionRatio",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@here/harp-materials!ExtrusionFeature:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ExtrusionFeature "
            }
          ],
          "releaseTag": "Public",
          "name": "ExtrusionFeature",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature.isEnabled:function(1)",
              "docComment": "/**\n * Checks if feature is enabled based on [[ExtrusionFeature]] properties.\n *\n * @param extrusionMaterial - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function isEnabled(extrusionMaterial: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeature",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "extrusionMaterial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isEnabled"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature.onBeforeCompile:function(1)",
              "docComment": "/**\n * This function should be called on implementors of ExtrusionFeature in the `onBeforeCompile` callback of that material. It adds the required code to the shaders and declares the new uniforms that control extrusion.\n *\n * @param extrusionMaterial - Material to add uniforms to.\n *\n * @param shader - [[THREE.WebGLShader]] containing the vertex and fragment shaders to add the special includes to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function onBeforeCompile(extrusionMaterial: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeature",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": ", shader: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Shader",
                  "canonicalReference": "three!Shader:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "extrusionMaterial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "shader",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "onBeforeCompile"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature.patchGlobalShaderChunks:function(1)",
              "docComment": "/**\n * Patch the THREE.ShaderChunk on first call with some extra shader chunks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function patchGlobalShaderChunks(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "patchGlobalShaderChunks"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature.updateExtrusionFeature:function(1)",
              "docComment": "/**\n * Update the internals of the `ExtrusionFeature` depending on the value of [[extrusionRatio]].\n *\n * @param ExtrusionMaterial - ExtrusionFeature\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function updateExtrusionFeature(extrusionMaterial: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeature",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "extrusionMaterial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "updateExtrusionFeature"
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@here/harp-materials!ExtrusionFeatureDefs:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ExtrusionFeatureDefs "
            }
          ],
          "releaseTag": "Public",
          "name": "ExtrusionFeatureDefs",
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureDefs.DEFAULT_RATIO_MAX:var",
              "docComment": "/**\n * Maximum ratio value for extrusion effect\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_RATIO_MAX: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_RATIO_MAX",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureDefs.DEFAULT_RATIO_MIN:var",
              "docComment": "/**\n * Minimum ratio value for extrusion effect\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_RATIO_MIN: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_RATIO_MIN",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT:var",
              "docComment": "/**\n * Buildings height used whenever no height-data is present or height is very small.\n *\n * Used to avoid z-fighting between ground plane and building.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MIN_BUILDING_HEIGHT = 0.01"
                }
              ],
              "releaseTag": "Public",
              "name": "MIN_BUILDING_HEIGHT",
              "variableTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin:class",
          "docComment": "/**\n * Mixin class for extended THREE materials. Adds new properties required for `extrusionRatio`.\n *\n * There is some special handling for the extrusionRatio property, which is animated via [[AnimatedExtrusionHandler]] that is using [[extrusionRatio]] setter and getter to update extrusion in a way that works well with the mixin and EdgeMaterial.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ExtrusionFeatureMixin implements "
            },
            {
              "kind": "Reference",
              "text": "ExtrusionFeature",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ExtrusionFeatureMixin",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#addExtrusionProperties:member(1)",
              "docComment": "/**\n * The mixin class should call this method to register the property [[extrusionRatio]]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addExtrusionProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addExtrusionProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#applyExtrusionParameters:member(1)",
              "docComment": "/**\n * Apply the extrusionRatio value from the parameters to the respective properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyExtrusionParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeatureParameters",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyExtrusionParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#copyExtrusionParameters:member(1)",
              "docComment": "/**\n * Copy extrusionRatio values from other ExtrusionFeature.\n *\n * @param source - The material to copy property values from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyExtrusionParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeature",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyExtrusionParameters"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#defines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defines?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#getExtrusionRatio:member(1)",
              "docComment": "/**\n * @see [[ExtrusionFeature#extrusion]]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getExtrusionRatio(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getExtrusionRatio"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#needsUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "needsUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "needsUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#onBeforeCompile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBeforeCompile?: "
                },
                {
                  "kind": "Reference",
                  "text": "CompileCallback",
                  "canonicalReference": "@here/harp-materials!~CompileCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onBeforeCompile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#setExtrusionRatio:member(1)",
              "docComment": "/**\n * @see [[ExtrusionFeature#extrusion]]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected setExtrusionRatio(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setExtrusionRatio"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#shaderDefines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shaderDefines?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shaderDefines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#shaderUniforms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shaderUniforms?: "
                },
                {
                  "kind": "Reference",
                  "text": "UniformsType",
                  "canonicalReference": "@here/harp-materials!~UniformsType:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shaderUniforms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureMixin#uniformsNeedUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uniformsNeedUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "uniformsNeedUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new implementor of [[ExtrusionFeature]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExtrusionFeatureParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "ExtrusionFeatureParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters#extrusionRatio:member",
              "docComment": "/**\n * Ratio of the extruded objects, where `1.0` is the default value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extrusionRatio?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "extrusionRatio",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters#zFightingWorkaround:member",
              "docComment": "/**\n * Enable z-fighting workaround that doesn't animate buildings with `height < [[ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT]]`.\n *\n * Should be applied to `polygon` materials using this feature.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zFightingWorkaround?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "zFightingWorkaround",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!FadingFeature:interface",
          "docComment": "/**\n * Base interface for all objects that should fade in the distance. The implementation of the actual FadingFeature is done with the help of the mixin class [[FadingFeatureMixin]] and a set of supporting functions in the namespace of the same name.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FadingFeature extends "
            },
            {
              "kind": "Reference",
              "text": "HiddenThreeJSMaterialProperties",
              "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "MixinShaderProperties",
              "canonicalReference": "@here/harp-materials!~MixinShaderProperties:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FadingFeature",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!FadingFeature#fadeFar:member",
              "docComment": "/**\n * Distance to the camera (range: `[0.0, 1.0]`) from which the objects are transparent. A value of <= 0.0 disables fading.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fadeFar?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeFar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!FadingFeature#fadeNear:member",
              "docComment": "/**\n * Distance to the camera (range: `[0.0, 1.0]`) from which the objects start fading out.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fadeNear?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeNear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@here/harp-materials!FadingFeature:namespace",
          "docComment": "/**\n * Namespace with support functions for implementors of `FadingFeature`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace FadingFeature "
            }
          ],
          "releaseTag": "Public",
          "name": "FadingFeature",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!FadingFeature.addRenderHelper:function(1)",
              "docComment": "/**\n * As three.js is rendering the transparent objects last (internally), regardless of their renderOrder value, we set the transparent value to false in the [[onAfterRenderCall]]. In [[onBeforeRender]], the function [[calculateDepthFromCameraDistance]] sets it to true if the fade distance value is less than 1.\n *\n * @param object - [[THREE.Object3D]] to prepare for rendering.\n *\n * @param viewRanges - The visibility ranges (clip planes and maximum visible distance) for actual camera setup.\n *\n * @param fadeNear - The fadeNear value to set in the material.\n *\n * @param fadeFar - The fadeFar value to set in the material.\n *\n * @param updateUniforms - If `true`, the fading uniforms are set. Not required if material is handling the uniforms already, like in a [[THREE.ShaderMaterial]].\n *\n * @param additionalCallback - If defined, this function will be called before the function will return.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function addRenderHelper(object: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Object3D",
                  "canonicalReference": "three!Object3D:class"
                },
                {
                  "kind": "Content",
                  "text": ", viewRanges: "
                },
                {
                  "kind": "Reference",
                  "text": "ViewRanges",
                  "canonicalReference": "@here/harp-datasource-protocol!ViewRanges:interface"
                },
                {
                  "kind": "Content",
                  "text": ", fadeNear: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", fadeFar: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", updateUniforms: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", additionalCallback?: "
                },
                {
                  "kind": "Content",
                  "text": "(renderer: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "WebGLRenderer",
                  "canonicalReference": "three!WebGLRenderer:class"
                },
                {
                  "kind": "Content",
                  "text": ", material: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Material",
                  "canonicalReference": "three!Material:class"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 21
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "viewRanges",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "fadeNear",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "fadeFar",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "updateUniforms",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                },
                {
                  "parameterName": "additionalCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 19
                  }
                }
              ],
              "name": "addRenderHelper"
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-materials!FadingFeature.DEFAULT_FADE_FAR:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_FADE_FAR: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_FADE_FAR",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@here/harp-materials!FadingFeature.DEFAULT_FADE_NEAR:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_FADE_NEAR: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_FADE_NEAR",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!FadingFeature.isEnabled:function(1)",
              "docComment": "/**\n * Checks if feature is enabled based on feature params.\n *\n * Fading feature will be disabled if fadeFar is undefined or fadeFar <= 0.0. This function is crucial for shader switching (chunks injection), whenever feature state changes between enabled/disabled. Current approach is to keep feature on (once enabled) whenever fading params are reasonable, even if it causes full fade in, no transparency.\n *\n * @param fadingMaterial - FadingFeature.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function isEnabled(fadingMaterial: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fadingMaterial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "isEnabled"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!FadingFeature.onBeforeCompile:function(1)",
              "docComment": "/**\n * This function should be called on implementors of FadingFeature in the `onBeforeCompile` callback of that material. It adds the required code to the shaders and declares the new uniforms that control fading based on view distance.\n *\n * @param fadingMaterial - Material to add uniforms to.\n *\n * @param shader - [[THREE.WebGLShader]] containing the vertex and fragment shaders to add the special includes to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function onBeforeCompile(fadingMaterial: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": ", shader: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Shader",
                  "canonicalReference": "three!Shader:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fadingMaterial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "shader",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "onBeforeCompile"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!FadingFeature.patchGlobalShaderChunks:function(1)",
              "docComment": "/**\n * Patch the THREE.ShaderChunk on first call with some extra shader chunks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function patchGlobalShaderChunks(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "patchGlobalShaderChunks"
            },
            {
              "kind": "Function",
              "canonicalReference": "@here/harp-materials!FadingFeature.updateFadingFeature:function(1)",
              "docComment": "/**\n * Update the internals of the `FadingFeature` depending on the value of [[fadeNear]]. The fading feature will be disabled if fadeFar <= 0.0.\n *\n * @param fadingMaterial - FadingFeature\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function updateFadingFeature(fadingMaterial: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fadingMaterial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "updateFadingFeature"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!FadingFeatureMixin:class",
          "docComment": "/**\n * Mixin class for extended THREE materials. Adds new properties required for `fadeNear` and `fadeFar`. There is some special handling for the fadeNear/fadeFar properties, which get some setters and getters in a way that works well with the mixin.\n *\n * @see [[Tile#addRenderHelper]]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FadingFeatureMixin implements "
            },
            {
              "kind": "Reference",
              "text": "FadingFeature",
              "canonicalReference": "@here/harp-materials!FadingFeature:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FadingFeatureMixin",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#addFadingProperties:member(1)",
              "docComment": "/**\n * The mixin classes should call this method to register the properties [[fadeNear]] and [[fadeFar]].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addFadingProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addFadingProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#applyFadingParameters:member(1)",
              "docComment": "/**\n * Apply the fadeNear/fadeFar values from the parameters to the respective properties.\n *\n * @param params - `FadingMeshBasicMaterial` parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyFadingParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeatureParameters",
                  "canonicalReference": "@here/harp-materials!FadingFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyFadingParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#copyFadingParameters:member(1)",
              "docComment": "/**\n * Copy fadeNear/fadeFar values from other FadingFeature.\n *\n * @param source - The material to copy property values from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyFadingParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyFadingParameters"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#defines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defines?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#getFadeFar:member(1)",
              "docComment": "/**\n * @see [[FadingFeature#fadeFar]]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getFadeFar(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFadeFar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#getFadeNear:member(1)",
              "docComment": "/**\n * @see [[FadingFeature#fadeNear]]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getFadeNear(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getFadeNear"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#needsUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "needsUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "needsUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#onBeforeCompile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBeforeCompile?: "
                },
                {
                  "kind": "Reference",
                  "text": "CompileCallback",
                  "canonicalReference": "@here/harp-materials!~CompileCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onBeforeCompile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#setFadeFar:member(1)",
              "docComment": "/**\n * @see [[FadingFeature#fadeFar]]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected setFadeFar(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setFadeFar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#setFadeNear:member(1)",
              "docComment": "/**\n * @see [[FadingFeature#fadeNear]]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected setFadeNear(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setFadeNear"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#shaderDefines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shaderDefines?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shaderDefines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#shaderUniforms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shaderUniforms?: "
                },
                {
                  "kind": "Reference",
                  "text": "UniformsType",
                  "canonicalReference": "@here/harp-materials!~UniformsType:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shaderUniforms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!FadingFeatureMixin#uniformsNeedUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uniformsNeedUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "uniformsNeedUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!FadingFeatureParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new implementor of [[FadingFeature]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FadingFeatureParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "FadingFeatureParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!FadingFeatureParameters#fadeFar:member",
              "docComment": "/**\n * Distance to the camera (range: `[0.0, 1.0]`) from which the objects are transparent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fadeFar?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeFar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!FadingFeatureParameters#fadeNear:member",
              "docComment": "/**\n * Distance to the camera (range: `[0.0, 1.0]`) from which the objects start fading out.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fadeNear?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeNear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!ForcedBlending:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ForcedBlending "
            }
          ],
          "releaseTag": "Public",
          "name": "ForcedBlending",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!ForcedBlending#forcedBlending:member",
              "docComment": "/**\n * This material has `blending` always enabled regardless of `opacity` setting.s\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcedBlending?: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "forcedBlending",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!getShaderDefine:function(1)",
          "docComment": "/**\n * Acquire shader 'define' value from `defines` map.\n *\n * If there is no value under [[key]] specified, function returns false, otherwise result is true or numeric value if there is a number stored.\n *\n * @param defines - The `defines` map.\n *\n * @param key - The identifier of the _define_.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getShaderDefine(defines: "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: any;\n}"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean | number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "defines",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getShaderDefine"
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!getShaderMaterialDefine:function(1)",
          "docComment": "/**\n * Acquire value of [[THREE.ShaderMaterial]] GPU shader preprocessor define.\n *\n * The semantic used in entire engine assumes that preprocessor defines may have only binary (defined / not defined) or numerical values, this ensures consistency in the shaders and materials code.  @note If _define_ with [[key]] is _undefined_ function returns [[false]], if defined but not numerical value it returns [[true]], otherwise returns number.  @see setShaderMaterialDefine.\n *\n * @param material - The material which shader defines are accessed.\n *\n * @param key - The _define_ name (identifier).\n *\n * @param fallbackValue - The value returned when material `defines` are not initialized yet, specified by default as [[false]], provide your own default if you expect numeric value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getShaderMaterialDefine(material: "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterial",
              "canonicalReference": "three!ShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", fallbackValue?: "
            },
            {
              "kind": "Content",
              "text": "boolean | number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean | number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "material",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fallbackValue",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "name": "getShaderMaterialDefine"
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!GroundAtmosphereMaterial:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GroundAtmosphereMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "RawShaderMaterial",
              "canonicalReference": "three!RawShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GroundAtmosphereMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!GroundAtmosphereMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `GroundAtmosphereMaterial` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!GroundAtmosphereMaterial#innerRadius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get innerRadius(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset innerRadius(radius: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "innerRadius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!GroundAtmosphereMaterial#outerRadius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get outerRadius(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset outerRadius(radius: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "outerRadius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!GroundAtmosphereMaterial#setDynamicLighting:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDynamicLighting(enableLighting: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enableLighting",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setDynamicLighting"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!GroundAtmosphereMaterial#updateUniforms:member(1)",
              "docComment": "/**\n * Updates the uniform data of a material used to render an atmosphere.\n *\n * This includes only uniforms that may change frame by frame, other uniforms are accessed with convenient material setters and getters.\n *\n * @param shaderMaterial - Material which uniforms will be updated.\n *\n * @param matrixWorldInverse - Inverse of world matrix used to position the atmosphere dome.\n *\n * @param lightDirection - The light directional vector in world space.\n *\n * @param camera - Camera used in rendering.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateUniforms(shaderMaterial: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "ShaderMaterial",
                  "canonicalReference": "three!ShaderMaterial:class"
                },
                {
                  "kind": "Content",
                  "text": ", object: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Object3D",
                  "canonicalReference": "three!Object3D:class"
                },
                {
                  "kind": "Content",
                  "text": ", camera: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Camera",
                  "canonicalReference": "three!Camera:class"
                },
                {
                  "kind": "Content",
                  "text": ", lightDirection: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "three!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shaderMaterial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "camera",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "lightDirection",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 12
                  }
                }
              ],
              "name": "updateUniforms"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-materials!GroundAtmosphereShader:var",
          "docComment": "/**\n * `GroundAtmosphereShader`.\n *\n * Describes shading of atmosphere as seen from outer space.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GroundAtmosphereShader: "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "Shader",
              "canonicalReference": "three!Shader:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "GroundAtmosphereShader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!hasDisplacementFeature:function(1)",
          "docComment": "/**\n * Determines whether a given material supports displacement maps for elevation overlay.\n *\n * @param material - The material to check.\n *\n * @returns Whether the given material supports displacement maps for elevation overlay.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasDisplacementFeature(material: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "material",
              "canonicalReference": "@here/harp-materials!~material"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "DisplacementFeature",
              "canonicalReference": "@here/harp-materials!DisplacementFeature:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "material",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "hasDisplacementFeature"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties:interface",
          "docComment": "/**\n * Material properties used from THREE, which may not be defined in the type.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HiddenThreeJSMaterialProperties "
            }
          ],
          "releaseTag": "Public",
          "name": "HiddenThreeJSMaterialProperties",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties#defines:member",
              "docComment": "/**\n * Used internally for material shader defines.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defines?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties#needsUpdate:member",
              "docComment": "/**\n * Informs THREE.js to re-compile material shader (due to change in code or defines).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "needsUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "needsUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties#onBeforeCompile:member",
              "docComment": "/**\n * Defines callback available in THREE.js materials.\n *\n * Called before shader program compilation to generate vertex & fragment shader output code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBeforeCompile?: "
                },
                {
                  "kind": "Reference",
                  "text": "CompileCallback",
                  "canonicalReference": "@here/harp-materials!~CompileCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onBeforeCompile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties#transparent:member",
              "docComment": "/**\n * Available in all materials in ThreeJS.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transparent?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "transparent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HiddenThreeJSMaterialProperties#uniformsNeedUpdate:member",
              "docComment": "/**\n * Hidden ThreeJS value that is made public here. Required to add new uniforms to subclasses of [[THREE.MeshBasicMaterial]]/[[THREE.MeshStandardMaterial]], basically all materials that are not THREE.ShaderMaterial.\n *\n * @deprecated\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uniformsNeedUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "uniformsNeedUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterial:class",
          "docComment": "/**\n * Material designed to render high precision lines (ideal for position-sensible data).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class HighPrecisionLineMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "RawShaderMaterial",
              "canonicalReference": "three!RawShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "HighPrecisionLineMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new `HighPrecisionLineMaterial`.\n *\n * @param params - `HighPrecisionLineMaterial` parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "HighPrecisionLineMaterialParameters",
                  "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterial#color:member",
              "docComment": "/**\n * Line color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get color(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset color(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterial.DEFAULT_COLOR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_COLOR: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_COLOR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterial.DEFAULT_OPACITY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_OPACITY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_OPACITY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterial#isHighPrecisionLineMaterial:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHighPrecisionLineMaterial: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isHighPrecisionLineMaterial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterialParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new [[SolidLineMaterial]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HighPrecisionLineMaterialParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "HighPrecisionLineMaterialParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterialParameters#color:member",
              "docComment": "/**\n * Line color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string | THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterialParameters#opacity:member",
              "docComment": "/**\n * Line opacity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "opacity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "opacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial:class",
          "docComment": "/**\n * Material designed to render high precision points (ideal for position-sensible data).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class HighPrecisionPointMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "PointsMaterial",
              "canonicalReference": "three!PointsMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "HighPrecisionPointMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new `HighPrecisionPointMaterial`.\n *\n * @param params - `HighPrecisionPointMaterial` parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "HighPrecisionPointMaterialParameters",
                  "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial.DEFAULT_COLOR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_COLOR: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_COLOR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial.DEFAULT_OPACITY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_OPACITY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_OPACITY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial.DEFAULT_SCALE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_SCALE: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_SCALE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial.DEFAULT_SIZE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_SIZE: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_SIZE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial#fragmentShader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fragmentShader?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fragmentShader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial#isHighPrecisionPointMaterial:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHighPrecisionPointMaterial: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isHighPrecisionPointMaterial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial#scale:member",
              "docComment": "/**\n * Point scale.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scale(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset scale(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "scale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial#uniforms:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uniforms: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [uniform: string]: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "IUniform",
                  "canonicalReference": "three!IUniform:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "uniforms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial#uvTransform:member",
              "docComment": "/**\n * UV transformation matrix.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get uvTransform(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3",
                  "canonicalReference": "three!Matrix3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset uvTransform(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3",
                  "canonicalReference": "three!Matrix3:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "uvTransform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial#vertexShader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vertexShader?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "vertexShader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterialParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new [[HighPrecisionPointMaterial]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HighPrecisionPointMaterialParameters extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "PointsMaterialParameters",
              "canonicalReference": "three!PointsMaterialParameters:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "HighPrecisionPointMaterialParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterialParameters#color:member",
              "docComment": "/**\n * Point color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string | THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterialParameters#opacity:member",
              "docComment": "/**\n * Point opacity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "opacity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "opacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterialParameters#scale:member",
              "docComment": "/**\n * Point scale.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scale?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "scale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterialParameters#uvTransform:member",
              "docComment": "/**\n * UV transformation matrix.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uvTransform?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3",
                  "canonicalReference": "three!Matrix3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "uvTransform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!IconMaterial:class",
          "docComment": "/**\n * 2D material for icons, similar to [[TextMaterial]]. Uses component in texture coordinates to apply opacity.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IconMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "RawShaderMaterial",
              "canonicalReference": "three!RawShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IconMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!IconMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new `IconMaterial`.\n *\n * @param params - `IconMaterial` parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params: "
                },
                {
                  "kind": "Reference",
                  "text": "IconMaterialParameters",
                  "canonicalReference": "@here/harp-materials!IconMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!IconMaterial#map:member",
              "docComment": "/**\n * Icon texture map/atlas.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get map(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "map",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!IconMaterialParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new [[IconMaterial]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IconMaterialParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "IconMaterialParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!IconMaterialParameters#map:member",
              "docComment": "/**\n * Texture map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "map",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!insertShaderInclude:function(1)",
          "docComment": "/**\n * Insert shader includes after another shader include.\n *\n * @param shaderContent - Original string.\n *\n * @param shaderName - String to append to.\n *\n * @param insertedShaderName - String to append after string `shaderA`.\n *\n * @param addTab - If `true`, a tab character will be inserted before `shaderB`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function insertShaderInclude(shaderContent: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", shaderName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", insertedShaderName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", addTab?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "shaderContent",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "shaderName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "insertedShaderName",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "addTab",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "insertShaderInclude"
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!isHighPrecisionLineMaterial:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isHighPrecisionLineMaterial(material: "
            },
            {
              "kind": "Content",
              "text": "object | undefined"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "material",
              "canonicalReference": "@here/harp-materials!~material"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "HighPrecisionLineMaterial",
              "canonicalReference": "@here/harp-materials!HighPrecisionLineMaterial:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "material",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isHighPrecisionLineMaterial"
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!isHighPrecisionPointMaterial:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isHighPrecisionPointMaterial(material: "
            },
            {
              "kind": "Content",
              "text": "object | undefined"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "material",
              "canonicalReference": "@here/harp-materials!~material"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "HighPrecisionPointMaterial",
              "canonicalReference": "@here/harp-materials!HighPrecisionPointMaterial:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "material",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isHighPrecisionPointMaterial"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@here/harp-materials!LineDashesModes:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum LineDashesModes "
            }
          ],
          "releaseTag": "Public",
          "name": "LineDashesModes",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-materials!LineDashesModes.DASHES_DIAMOND:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DASHES_DIAMOND = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "DASHES_DIAMOND",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-materials!LineDashesModes.DASHES_ROUND:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DASHES_ROUND = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "DASHES_ROUND",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@here/harp-materials!LineDashesModes.DASHES_SQUARE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DASHES_SQUARE = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "DASHES_SQUARE",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-materials!LuminosityHighPassShader:var",
          "docComment": "/**\n * The shader used in the [[UnrealBloomPass]] for the bloom/glow effect.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "LuminosityHighPassShader: "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "Shader",
              "canonicalReference": "three!Shader:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "LuminosityHighPassShader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial:class",
          "docComment": "/**\n * Subclass of [[THREE.MeshBasicMaterial]]. Adds new properties required for [[fadeNear]] and [[fadeFar]]. In addition to the new properties (which update their respective uniforms), it is also required to update the material in their objects [[onBeforeRender]] and [[OnAfterRender]] calls, where their flag [[transparent]] is set and the internal fadeNear/fadeFar values are updated to world space distances.\n *\n * @see [[Tile#addRenderHelper]]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MapMeshBasicMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "MeshBasicMaterial",
              "canonicalReference": "three!MeshBasicMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "FadingFeature",
              "canonicalReference": "@here/harp-materials!FadingFeature:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ExtrusionFeature",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "DisplacementFeature",
              "canonicalReference": "@here/harp-materials!DisplacementFeature:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MapMeshBasicMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new `FadingMeshBasicMaterial`.\n *\n * @param params - `FadingMeshBasicMaterial` parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "MeshBasicMaterialParameters",
                  "canonicalReference": "three!MeshBasicMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeatureParameters",
                  "canonicalReference": "@here/harp-materials!FadingFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeatureParameters",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "DisplacementFeatureParameters",
                  "canonicalReference": "@here/harp-materials!DisplacementFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#addDisplacementProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addDisplacementProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addDisplacementProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#addExtrusionProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addExtrusionProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addExtrusionProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#addFadingProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addFadingProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addFadingProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#applyDisplacementParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyDisplacementParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplacementFeatureParameters",
                  "canonicalReference": "@here/harp-materials!DisplacementFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyDisplacementParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#applyExtrusionParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyExtrusionParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeatureParameters",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyExtrusionParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#applyFadingParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyFadingParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeatureParameters",
                  "canonicalReference": "@here/harp-materials!FadingFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyFadingParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#copy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copy(source: "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#copyDisplacementParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyDisplacementParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplacementFeature",
                  "canonicalReference": "@here/harp-materials!DisplacementFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyDisplacementParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#copyExtrusionParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyExtrusionParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyExtrusionParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#copyFadingParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyFadingParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyFadingParameters"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#displacementMap:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get displacementMap(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset displacementMap(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null);"
                }
              ],
              "releaseTag": "Public",
              "name": "displacementMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#extrusionRatio:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get extrusionRatio(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset extrusionRatio(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "extrusionRatio",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#fadeFar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fadeFar(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fadeFar(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeFar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#fadeNear:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fadeNear(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fadeNear(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeNear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshBasicMaterial#setDisplacementMap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDisplacementMap(value: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setDisplacementMap"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 6
            },
            {
              "startIndex": 7,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!MapMeshDepthMaterial:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MapMeshDepthMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "MeshDepthMaterial",
              "canonicalReference": "three!MeshDepthMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "ExtrusionFeature",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MapMeshDepthMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!MapMeshDepthMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MapMeshDepthMaterial` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "MeshDepthMaterialParameters",
                  "canonicalReference": "three!MeshDepthMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeatureParameters",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshDepthMaterial#addExtrusionProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addExtrusionProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addExtrusionProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshDepthMaterial#applyExtrusionParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyExtrusionParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeatureParameters",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyExtrusionParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshDepthMaterial#copyExtrusionParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyExtrusionParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyExtrusionParameters"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshDepthMaterial#extrusionRatio:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get extrusionRatio(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset extrusionRatio(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "extrusionRatio",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial:class",
          "docComment": "/**\n * Subclass of THREE.MeshStandardMaterial. Adds new properties required for `fadeNear` and `fadeFar`. In addition to the new properties (which fill respective uniforms), it is also required to update the material in their objects `onBeforeRender` and `OnAfterRender` calls, where their flag `transparent` is set and the internal fadeNear/fadeFar values are updated to world space distances.\n *\n * @see [[Tile#addRenderHelper]]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MapMeshStandardMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "MeshStandardMaterial",
              "canonicalReference": "three!MeshStandardMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "FadingFeature",
              "canonicalReference": "@here/harp-materials!FadingFeature:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ExtrusionFeature",
              "canonicalReference": "@here/harp-materials!ExtrusionFeature:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "DisplacementFeature",
              "canonicalReference": "@here/harp-materials!DisplacementFeature:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MapMeshStandardMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new `FadingMeshStandardMaterial`.\n *\n * @param params - `FadingMeshStandardMaterial` parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "MeshStandardMaterialParameters",
                  "canonicalReference": "three!MeshStandardMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeatureParameters",
                  "canonicalReference": "@here/harp-materials!FadingFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeatureParameters",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "ShadowFeatureParameters",
                  "canonicalReference": "@here/harp-materials!ShadowFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#addExtrusionProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addExtrusionProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addExtrusionProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#addFadingProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addFadingProperties(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "addFadingProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#applyExtrusionParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyExtrusionParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtrusionFeatureParameters",
                  "canonicalReference": "@here/harp-materials!ExtrusionFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyExtrusionParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#applyFadingParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected applyFadingParameters(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeatureParameters",
                  "canonicalReference": "@here/harp-materials!FadingFeatureParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "applyFadingParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#copy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copy(source: "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#copyExtrusionParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyExtrusionParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyExtrusionParameters"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#copyFadingParameters:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected copyFadingParameters(source: "
                },
                {
                  "kind": "Reference",
                  "text": "FadingFeature",
                  "canonicalReference": "@here/harp-materials!FadingFeature:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "copyFadingParameters"
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#displacementMap:member",
              "docComment": "/**\n * @override\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get displacementMap(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset displacementMap(map: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null);"
                }
              ],
              "releaseTag": "Public",
              "name": "displacementMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#extrusionRatio:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get extrusionRatio(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset extrusionRatio(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "extrusionRatio",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#fadeFar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fadeFar(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fadeFar(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeFar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#fadeNear:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fadeNear(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fadeNear(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeNear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!MapMeshStandardMaterial#uniformsNeedUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uniformsNeedUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "uniformsNeedUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 6
            },
            {
              "startIndex": 7,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!MSAAMaterial:class",
          "docComment": "/**\n * The material to use for the quad of the [[MSAARenderPass]] in the composing.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MSAAMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterial",
              "canonicalReference": "three!ShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MSAAMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!MSAAMaterial:constructor(1)",
              "docComment": "/**\n * The constructor of `MSAAMaterial`.\n *\n * @param uniforms - The [[CopyShader]]'s uniforms.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(uniforms: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [uniformName: string]: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "IUniform",
                  "canonicalReference": "three!IUniform:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uniforms",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-materials!SepiaShader:var",
          "docComment": "/**\n * `SepiaShader`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "SepiaShader: "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "Shader",
              "canonicalReference": "three!Shader:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "SepiaShader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!setShaderDefine:function(1)",
          "docComment": "/**\n * Sets new value of 'define' regardless of current value set.\n *\n * Update `defines` map with new key and value, if key is already occupied it overrides its value. Helper function that may be used to setup [[THREE.ShaderMaterialParameters]] before material is create (i.e. in c-tor).\n *\n * @param defines - Shader `defines` stored in key-value map.\n *\n * @param key - The key used to identify _define_.\n *\n * @param value - The value to be stored.\n *\n * @returns [[true]] if define has actually changed, false is stayed the same.  @see setShaderMaterialDefine.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setShaderDefine(defines: "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: any;\n}"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "boolean | number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "defines",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "setShaderDefine"
        },
        {
          "kind": "Function",
          "canonicalReference": "@here/harp-materials!setShaderMaterialDefine:function(1)",
          "docComment": "/**\n * Setup material shader _define_ using two allowable semantics.\n *\n * Function accepts two types of values for shader preprocessor _define_: - [[boolean]], simple [[true]] or [[false]] which causes _define_ to be set with empty string, such defines may be handled in the shader using __#ifdef__ semantics:\n * ```\n * #ifdef SOME_DEFINE && !defined(OTHER_DEFINE)\n * // do something\n * #endif\n * ```\n *\n * - [[number]] which sets _define_ to explicit value. You may use it to enable/disable some code or even set compile time constants affecting shaders math:\n * ```\n * #if SOME_DEFINE_SWITCH && OTHER_DEFINE_SWITCH == 0\n * gl_FragColor = vec4(1, 1, 1, DEFINE_ALPHA)\n * #endif\n * ```\n *\n * @note Setting _define_ with `false` value is not the same as setting is with number value of `0`.\n *\n * @param material - The [[THREE.ShaderMaterial]] which shader _define_ will be set.\n *\n * @param key - Name of shader _define_ as used in shader, i.e. `USE_FOG`, `COLOR_ALPHA`, etc.\n *\n * @param value - The value to be set as number or boolean specifying if preprocessor define should be defined or not.\n *\n * @returns [[true]] if material has been forced to update (re-compile) due to define changes, return [[false]] whenever define has not been changed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setShaderMaterialDefine(material: "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "ShaderMaterial",
              "canonicalReference": "three!ShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "boolean | number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "material",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "name": "setShaderMaterialDefine"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!ShadowFeatureParameters:interface",
          "docComment": "/**\n * Parameter used to control patching the standard material shader to ensure that the materials color isn't affected by the light direction, only valid for techniques that are \"fill\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ShadowFeatureParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "ShadowFeatureParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!ShadowFeatureParameters#removeDiffuseLight:member",
              "docComment": "/**\n * Whether the diffuse light component is removed (i.e. the materials color is therefore just the ambient + shadow).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeDiffuseLight?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "removeDiffuseLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!SkyAtmosphereMaterial:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SkyAtmosphereMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "RawShaderMaterial",
              "canonicalReference": "three!RawShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SkyAtmosphereMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!SkyAtmosphereMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SkyAtmosphereMaterial` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SkyAtmosphereMaterial#innerRadius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get innerRadius(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset innerRadius(radius: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "innerRadius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SkyAtmosphereMaterial#outerRadius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get outerRadius(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset outerRadius(radius: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "outerRadius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!SkyAtmosphereMaterial#setDynamicLighting:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDynamicLighting(enableLighting: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enableLighting",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setDynamicLighting"
            },
            {
              "kind": "Method",
              "canonicalReference": "@here/harp-materials!SkyAtmosphereMaterial#updateUniforms:member(1)",
              "docComment": "/**\n * Updates the uniform data of a material used to render an atmosphere.\n *\n * This includes only uniforms that may change frame by frame, other uniforms are accessed with convenient material setters and getters.\n *\n * @param shaderMaterial - Material which uniforms will be updated.\n *\n * @param matrixWorldInverse - Inverse of world matrix used to position the atmosphere dome.\n *\n * @param lightDirection - The light directional vector in world space.\n *\n * @param camera - Camera used in rendering.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateUniforms(shaderMaterial: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "ShaderMaterial",
                  "canonicalReference": "three!ShaderMaterial:class"
                },
                {
                  "kind": "Content",
                  "text": ", object: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Object3D",
                  "canonicalReference": "three!Object3D:class"
                },
                {
                  "kind": "Content",
                  "text": ", camera: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Camera",
                  "canonicalReference": "three!Camera:class"
                },
                {
                  "kind": "Content",
                  "text": ", lightDirection: "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "three!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shaderMaterial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "camera",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "lightDirection",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 12
                  }
                }
              ],
              "name": "updateUniforms"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-materials!SkyAtmosphereShader:var",
          "docComment": "/**\n * `SkyAtmosphereShader`.\n *\n * Describes shading of atmosphere as seen from outer space.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "SkyAtmosphereShader: "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "Shader",
              "canonicalReference": "three!Shader:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "SkyAtmosphereShader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@here/harp-materials!SolidLineMaterial:class",
          "docComment": "/**\n * Material designed to render solid variable-width lines.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SolidLineMaterial extends "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "RawShaderMaterial",
              "canonicalReference": "three!RawShaderMaterial:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "DisplacementFeature",
              "canonicalReference": "@here/harp-materials!DisplacementFeature:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "FadingFeature",
              "canonicalReference": "@here/harp-materials!FadingFeature:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SolidLineMaterial",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial:constructor(1)",
              "docComment": "/**\n * Constructs a new `SolidLineMaterial`.\n *\n * @param params - `SolidLineMaterial` parameters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "SolidLineMaterialParameters",
                  "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#caps:member",
              "docComment": "/**\n * Caps mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get caps(): "
                },
                {
                  "kind": "Reference",
                  "text": "LineCaps",
                  "canonicalReference": "@here/harp-datasource-protocol!LineCaps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset caps(value: "
                },
                {
                  "kind": "Reference",
                  "text": "LineCaps",
                  "canonicalReference": "@here/harp-datasource-protocol!LineCaps:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "caps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#clipTileSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get clipTileSize(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset clipTileSize(tileSize: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "three!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "clipTileSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#color:member",
              "docComment": "/**\n * Line color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get color(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset color(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#dashColor:member",
              "docComment": "/**\n * Dash color.\n *\n * @note The property [[gapSize]] need to be set to enable dashed line.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get dashColor(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset dashColor(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "dashColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#dashes:member",
              "docComment": "/**\n * Dashes mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get dashes(): "
                },
                {
                  "kind": "Reference",
                  "text": "LineDashes",
                  "canonicalReference": "@here/harp-datasource-protocol!LineDashes:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset dashes(value: "
                },
                {
                  "kind": "Reference",
                  "text": "LineDashes",
                  "canonicalReference": "@here/harp-datasource-protocol!LineDashes:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "dashes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#dashSize:member",
              "docComment": "/**\n * Size of the dashed segments.\n *\n * @note Ths [[gapSize]] need to be also set to enable dashed line.  @see gapSize.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get dashSize(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset dashSize(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "dashSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_COLOR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_COLOR: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_COLOR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_DASH_SIZE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_DASH_SIZE: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_DASH_SIZE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_DRAW_RANGE_END:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_DRAW_RANGE_END: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_DRAW_RANGE_END",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_DRAW_RANGE_START:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_DRAW_RANGE_START: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_DRAW_RANGE_START",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_GAP_SIZE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_GAP_SIZE: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_GAP_SIZE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_OFFSET:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_OFFSET: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_OFFSET",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_OPACITY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_OPACITY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_OPACITY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_OUTLINE_WIDTH:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_OUTLINE_WIDTH: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_OUTLINE_WIDTH",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial.DEFAULT_WIDTH:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DEFAULT_WIDTH: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFAULT_WIDTH",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#displacementMap:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get displacementMap(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset displacementMap(map: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Texture",
                  "canonicalReference": "three!Texture:class"
                },
                {
                  "kind": "Content",
                  "text": " | null);"
                }
              ],
              "releaseTag": "Public",
              "name": "displacementMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#drawRangeEnd:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get drawRangeEnd(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset drawRangeEnd(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "drawRangeEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#drawRangeStart:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get drawRangeStart(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset drawRangeStart(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "drawRangeStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#fadeFar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fadeFar(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fadeFar(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeFar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#fadeNear:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fadeNear(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fadeNear(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "fadeNear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#fog:member",
              "docComment": "/**\n * Checks if fog is enabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get fog(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset fog(enable: boolean);"
                }
              ],
              "releaseTag": "Public",
              "name": "fog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#gapSize:member",
              "docComment": "/**\n * Size of the gaps between dashed segments.\n *\n * @note You may also need to set [[dashSize]].  @see dashSize.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get gapSize(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset gapSize(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "gapSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#lineWidth:member",
              "docComment": "/**\n * Line width.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get lineWidth(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset lineWidth(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "lineWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#offset:member",
              "docComment": "/**\n * @return The offset to shift the line in world space perpendicular to the direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get offset(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset offset(offset: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "offset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#opacity:member",
              "docComment": "/**\n * Line opacity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get opacity(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset opacity(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "opacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#outline:member",
              "docComment": "/**\n * Checks if outline is enabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get outline(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset outline(enable: boolean);"
                }
              ],
              "releaseTag": "Public",
              "name": "outline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#outlineColor:member",
              "docComment": "/**\n * Outline color.\n *\n * @note The width of outline ([[outlineWidth]]) need to be also set to enable outlining.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get outlineColor(): "
                },
                {
                  "kind": "Content",
                  "text": "THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset outlineColor(value: THREE."
                },
                {
                  "kind": "Reference",
                  "text": "Color",
                  "canonicalReference": "three!Color:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "name": "outlineColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@here/harp-materials!SolidLineMaterial#outlineWidth:member",
              "docComment": "/**\n * Outline width.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get outlineWidth(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset outlineWidth(value: number);"
                }
              ],
              "releaseTag": "Public",
              "name": "outlineWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 6
            },
            {
              "startIndex": 7,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters:interface",
          "docComment": "/**\n * Parameters used when constructing a new [[SolidLineMaterial]].\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SolidLineMaterialParameters extends "
            },
            {
              "kind": "Reference",
              "text": "FadingFeatureParameters",
              "canonicalReference": "@here/harp-materials!FadingFeatureParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "DisplacementFeatureParameters",
              "canonicalReference": "@here/harp-materials!DisplacementFeatureParameters:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SolidLineMaterialParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#caps:member",
              "docComment": "/**\n * Describes line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`). Default is `\"Round\"`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "caps?: "
                },
                {
                  "kind": "Reference",
                  "text": "LineCaps",
                  "canonicalReference": "@here/harp-datasource-protocol!LineCaps:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "caps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#color:member",
              "docComment": "/**\n * Line color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#dashColor:member",
              "docComment": "/**\n * Line dashes color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dashColor?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dashColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#dashes:member",
              "docComment": "/**\n * Describes line dash type (`\"Round\"`, `\"Square\"`, `\"Diamond\"`). Default is `\"Square\"`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dashes?: "
                },
                {
                  "kind": "Reference",
                  "text": "LineDashes",
                  "canonicalReference": "@here/harp-datasource-protocol!LineDashes:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dashes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#dashSize:member",
              "docComment": "/**\n * Size of the dashed segments.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dashSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dashSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#depthTest:member",
              "docComment": "/**\n * Enables/Disable depth test.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depthTest?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "depthTest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#depthWrite:member",
              "docComment": "/**\n * Enables/Disable depth write.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depthWrite?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "depthWrite",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#drawRangeEnd:member",
              "docComment": "/**\n * Describes the ending drawing position for the line (in the range [0...1]). Default is `1.0`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drawRangeEnd?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "drawRangeEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#drawRangeStart:member",
              "docComment": "/**\n * Describes the starting drawing position for the line (in the range [0...1]). Default is `0.0`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drawRangeStart?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "drawRangeStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#fog:member",
              "docComment": "/**\n * `SolidLineMaterial` extends the ThreeJS `RawShaderMaterial` that does not update fog at runtime, so instead of recompiling everything we pass it in the constructor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fog?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#gapSize:member",
              "docComment": "/**\n * Size of the gaps between dashed segments.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gapSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "gapSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#lineWidth:member",
              "docComment": "/**\n * Line width.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lineWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lineWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#offset:member",
              "docComment": "/**\n * How much to offset in world units.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "offset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#opacity:member",
              "docComment": "/**\n * Line opacity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "opacity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "opacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#outlineColor:member",
              "docComment": "/**\n * Line outline color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outlineColor?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "outlineColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@here/harp-materials!SolidLineMaterialParameters#outlineWidth:member",
              "docComment": "/**\n * Outline width.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outlineWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "outlineWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@here/harp-materials!VignetteShader:var",
          "docComment": "/**\n * `VignetteShader`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "VignetteShader: "
            },
            {
              "kind": "Content",
              "text": "THREE."
            },
            {
              "kind": "Reference",
              "text": "Shader",
              "canonicalReference": "three!Shader:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "VignetteShader",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        }
      ]
    }
  ]
}
